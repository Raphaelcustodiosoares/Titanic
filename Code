{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# remove warnings\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "# ---\n",
    "\n",
    "%matplotlib inline\n",
    "import pandas as pd\n",
    "pd.options.display.max_columns = 100\n",
    "from matplotlib import pyplot as plt\n",
    "import matplotlib\n",
    "matplotlib.style.use('ggplot')\n",
    "import numpy as np\n",
    "\n",
    "pd.options.display.max_rows = 100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "_cell_guid": "efcf8419-f336-47b8-a67b-dea6000a2223",
    "_uuid": "c6d6039f1ef7506a0be58d22a6ba0eca7d6d2358"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  \\\n",
       "0            1         0       3   \n",
       "1            2         1       1   \n",
       "2            3         1       3   \n",
       "3            4         1       1   \n",
       "4            5         0       3   \n",
       "\n",
       "                                                Name     Sex   Age  SibSp  \\\n",
       "0                            Braund, Mr. Owen Harris    male  22.0      1   \n",
       "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
       "2                             Heikkinen, Miss. Laina  female  26.0      0   \n",
       "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
       "4                           Allen, Mr. William Henry    male  35.0      0   \n",
       "\n",
       "   Parch            Ticket     Fare Cabin Embarked  \n",
       "0      0         A/5 21171   7.2500   NaN        S  \n",
       "1      0          PC 17599  71.2833   C85        C  \n",
       "2      0  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3      0            113803  53.1000  C123        S  \n",
       "4      0            373450   8.0500   NaN        S  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_csv('../input/train.csv')\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "_cell_guid": "d83b43a6-37cd-4e2d-9b67-6431b05d27b7",
    "_uuid": "52c53f1df052bc7c8c226db6aa4a2acca7073a43"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>714.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.383838</td>\n",
       "      <td>2.308642</td>\n",
       "      <td>29.699118</td>\n",
       "      <td>0.523008</td>\n",
       "      <td>0.381594</td>\n",
       "      <td>32.204208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>257.353842</td>\n",
       "      <td>0.486592</td>\n",
       "      <td>0.836071</td>\n",
       "      <td>14.526497</td>\n",
       "      <td>1.102743</td>\n",
       "      <td>0.806057</td>\n",
       "      <td>49.693429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.420000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>223.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>20.125000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.910400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14.454200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>668.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>31.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>512.329200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       PassengerId    Survived      Pclass         Age       SibSp  \\\n",
       "count   891.000000  891.000000  891.000000  714.000000  891.000000   \n",
       "mean    446.000000    0.383838    2.308642   29.699118    0.523008   \n",
       "std     257.353842    0.486592    0.836071   14.526497    1.102743   \n",
       "min       1.000000    0.000000    1.000000    0.420000    0.000000   \n",
       "25%     223.500000    0.000000    2.000000   20.125000    0.000000   \n",
       "50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n",
       "75%     668.500000    1.000000    3.000000   38.000000    1.000000   \n",
       "max     891.000000    1.000000    3.000000   80.000000    8.000000   \n",
       "\n",
       "            Parch        Fare  \n",
       "count  891.000000  891.000000  \n",
       "mean     0.381594   32.204208  \n",
       "std      0.806057   49.693429  \n",
       "min      0.000000    0.000000  \n",
       "25%      0.000000    7.910400  \n",
       "50%      0.000000   14.454200  \n",
       "75%      0.000000   31.000000  \n",
       "max      6.000000  512.329200  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "_cell_guid": "79c7e3d0-c299-4dcb-8224-4455121ee9b0",
    "_uuid": "d629ff2d2480ee46fbb7e2d37f6b5fab8052498a",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "data['Age'].fillna(data['Age'].median(), inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "_cell_guid": "15019ecf-38a1-4ef5-898f-54754f81808b",
    "_uuid": "4045d0fcd3e98ff1fc550793610b118d271b758c"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.383838</td>\n",
       "      <td>2.308642</td>\n",
       "      <td>29.361582</td>\n",
       "      <td>0.523008</td>\n",
       "      <td>0.381594</td>\n",
       "      <td>32.204208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>257.353842</td>\n",
       "      <td>0.486592</td>\n",
       "      <td>0.836071</td>\n",
       "      <td>13.019697</td>\n",
       "      <td>1.102743</td>\n",
       "      <td>0.806057</td>\n",
       "      <td>49.693429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.420000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>223.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.910400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14.454200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>668.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>35.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>31.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>512.329200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       PassengerId    Survived      Pclass         Age       SibSp  \\\n",
       "count   891.000000  891.000000  891.000000  891.000000  891.000000   \n",
       "mean    446.000000    0.383838    2.308642   29.361582    0.523008   \n",
       "std     257.353842    0.486592    0.836071   13.019697    1.102743   \n",
       "min       1.000000    0.000000    1.000000    0.420000    0.000000   \n",
       "25%     223.500000    0.000000    2.000000   22.000000    0.000000   \n",
       "50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n",
       "75%     668.500000    1.000000    3.000000   35.000000    1.000000   \n",
       "max     891.000000    1.000000    3.000000   80.000000    8.000000   \n",
       "\n",
       "            Parch        Fare  \n",
       "count  891.000000  891.000000  \n",
       "mean     0.381594   32.204208  \n",
       "std      0.806057   49.693429  \n",
       "min      0.000000    0.000000  \n",
       "25%      0.000000    7.910400  \n",
       "50%      0.000000   14.454200  \n",
       "75%      0.000000   31.000000  \n",
       "max      6.000000  512.329200  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "_cell_guid": "f4ec0540-39a8-4fdc-aa57-bd7f91082c8f",
    "_uuid": "2a909a0a19bd31300ea8a95dd9c811323e94ba42"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f8c35722860>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8c357222b0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "survived_sex = data[data['Survived']==1]['Sex'].value_counts()\n",
    "dead_sex = data[data['Survived']==0]['Sex'].value_counts()\n",
    "df = pd.DataFrame([survived_sex,dead_sex])\n",
    "df.index = ['Survived','Dead']\n",
    "df.plot(kind='bar',stacked=True, figsize=(5,5))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "_cell_guid": "d4bb7962-8527-45cd-b19d-91a55e19cb29",
    "_uuid": "21e89058f5aba7410446a41037d54433e389a55c"
   },
   "source": [
    "O sexo interfere **MUITO** na chance de sobreviver"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "_cell_guid": "2eba29f4-062e-4ebc-b9af-6d3634c353a0",
    "_uuid": "05e6713e82d2274412a9a31a41e20cad8be9fd9b"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f8c3571ee10>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAxIAAAHmCAYAAADnWLjtAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMS4wLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvpW3flQAAIABJREFUeJzt3Xt4VOW5/vF7JgOEAAnJTAATEBsB\nEZXKIZwEgiYgomLKRthaaqFWQGJF6bbCLgctqHgIASVIq0BF9wF0a4oooIFtYjlUEBRBUIJgkQgh\nmSGEQBInmd8f/JxN5LRWMsfw/VwX15VZM2utZx5yuvO+71oWj8fjEQAAAACYYA12AQAAAADCD0EC\nAAAAgGkECQAAAACmESQAAAAAmEaQAAAAAGAaQQIAAACAaQQJAAAAAKYRJAAAAACYRpAAAAAAYBpB\nAgAAAIBptmAX4EuFhYUBP6fD4VBxcXHAz9sQ0UvfoI++Qy99h176Dr30HXrpO/TSd0KhlwkJCYZe\nx4gEAAAAANMIEgAAAABMC8jUpuLiYmVnZ+v48eOyWCxKS0vTsGHDtHLlSq1fv17R0dGSpHvuuUfd\nu3eXJL3zzjvasGGDrFarxo0bpxtvvDEQpQIAAAAwICBBIiIiQr/61a+UlJSk06dPa+rUqeratask\n6fbbb9fw4cNrvf67777Tpk2bNG/ePLlcLs2ePVsLFiyQ1coACgAAAP6Px+NRRUWFampqZLFYgl1O\nvR09elSVlZV+P4/H45HValVkZGSd+xaQIBEbG6vY2FhJUtOmTZWYmCin03nB12/dulX9+vVTo0aN\n1KpVK7Vp00YFBQXq1KlTIMoFAABAmKioqFCjRo1kszWMawjZbDZFREQE5Fxut1sVFRVq2rRpnfYP\neMeLiop04MABdejQQXv37tW6deuUn5+vpKQk3XfffWrevLmcTqc6duzo3ScuLu68wSM3N1e5ubmS\npLlz58rhcATsffzIZrMF5bwNEb30DfroO/TSd+il79BL36GXvhPMXh49elRNmjQJyrn9JVChyGaz\nyWKx1Pn/LqBBoqKiQpmZmRo7dqyioqI0ZMgQjRw5UpK0YsUKLV++XJMmTZLH4zF0vLS0NKWlpXkf\nB+NSWaFwia6Ggl76Bn30HXrpO/TSd+il79BL3wlmLysrKwP2F/xAsNlscrvdATtfZWXlOf93IXf5\nV7fbrczMTA0YMEC9e/eWJLVs2VJWq1VWq1Wpqanav3+/JMlut6ukpMS7r9PpVFxcXKBKBQAAAHAJ\nARmR8Hg8Wrx4sRITE3XHHXd4t7tcLu/aiU8++UTt2rWTJPXs2VMvvvii7rjjDrlcLn3//ffq0KFD\nIEoFAABAGEt8JdGnxzv8wOFLvmbBggXKyclRRESELBaLnn32We+VSOvqgw8+0Ndff62HHnqoXseR\npI4dO2rfvn31Ps5PBSRIfPXVV8rPz9eVV16pxx57TNKZS71u3LhRBw8elMViUXx8vMaPHy9Jateu\nnfr27aspU6bIarXq/vvv54pNAAAACDnbtm1Tbm6u1q5dqyZNmsjpdKqqqsrQvm63+4LrIYYMGaIh\nQ4b4slSfC0iQ6Ny5s1auXHnO9osltREjRmjEiBH+LAsAAACol6KiIsXFxXkXfP84Hb93795as2aN\n4uLi9Pnnn2v27Nl66623lJmZqaNHj+rQoUOKi4vTt99+q8zMTF1zzTWSpF/84heaMWOG9uzZo507\nd+rxxx/X4MGDtXnzZlmtVp0+fVoDBgzQ5s2bdfjwYf3xj39USUmJmjZtqueff14dOnTQP//5T2Vk\nZKi6ulqDBg3y23vnz/wAAABAHaWkpKiwsFD9+/fXtGnTtHnz5kvus3PnTi1dulTZ2dkaPny43n33\nXUlnrkB15MgR7/3WJCk6OlpdunTxHveDDz7QoEGD1KhRI/3hD3/Q7NmztXbtWs2YMUPTpk2TJM2c\nOVP33Xef3n//fbVq1coP7/oMggQAAABQR82aNdPatWv13HPPyW6368EHH9SKFSsuus+QIUO89264\n8847tXr1aknSu+++qzvvvPOc1w8fPlyrVq2SJK1atUrDhw9XeXm5Pv30U02YMEGDBw/W448/rqKi\nIkln7smWnp4uSfqXf/kXn73Xn2oYd+4AAAAAgiQiIkL9+vVTv3791LlzZ7355puy2WyqqamRpHPu\nVB0VFeX9+IorrlBsbKy+/PJLrVq1Si+88MI5xx8yZIieeeYZuVwu7dy5UzfddJNOnTql6Ohoffjh\nh+etKRB3+WZEAgAAAKijgoICffPNN97Hu3fvVtu2bdW2bVvt3LlTkvTee+9d9Bh33XWXXn75ZZWV\nlalLly7nPN+sWTPdeOONmjlzptLS0hQREaEWLVqoXbt23mlRHo9Hu3fvliQlJyfrb3/7myTp7bff\n9sn7PB9GJAAAANBgGLlcqy+dOnVK06dP14kTJ2Sz2XTVVVfpueee0759+/T73/9eL730krp163bR\nY9x+++2aOXOmHnnkkQu+Zvjw4ZowYYLeeust77aFCxdq2rRpWrBggdxut+666y5dd911+tOf/qSM\njAwtWbJEw4YN89l7/SmLx+htpMNAYWFhwM/JXTF9h176Bn30HXrpO/TSd+il79BL3wlmL0+dOlVr\nqlC4C/Sdrc/Xv5C7szUAAACAhoMgAQAAAMA01kgACEsJiYl+OW7h4cDOrQUAIFwxIgEAAADANIIE\nAAAAANMIEgAAAABMY40EAAAAGgxfr6EzsnauXbt26ty5s9xutyIiInT33XfrgQcekNVa/7/ZZ2Zm\nqlmzZpo4cWK9j+VrBAkAAACgHiIjI/Xhhx9KkoqLi5WRkaGysjL927/9W5Ar8y+mNgEAAAA+4nA4\n9Nxzz2nZsmXyeDyqrq7W7NmzNWzYMKWlpen111+XJJWXl2vUqFG69dZblZqaqnXr1nmPsWDBAg0Y\nMECjR4/W/v37g/VWLokRCQAAAMCH2rdvL4/Ho+LiYq1bt04tWrTQ+++/r8rKSqWnpyslJUUJCQla\nsmSJWrRoIafTqTvvvFNDhgzR559/rlWrVumDDz6Q2+3W0KFD1bVr12C/pfMiSAAAAAA+5vF4JEl5\neXnas2eP3nvvPUlSWVmZDhw4oCuuuEJz587VP/7xD1ksFh05ckTHjh3Tli1bNHToUDVt2lSSNHjw\n4KC9h0shSAAAAAA+9O2338pqtcrhcEiS5syZo0GDBtV6zYoVK1RSUqI1a9aoUaNG6t27tyorKyVJ\nFosl0CXXCWskAAAAAB8pKSnR1KlTNW7cOFksFqWkpGj58uX64YcfJEn79+/XqVOnVFZWJofDoUaN\nGmnjxo367rvvJEl9+/bV2rVrdfr0aZ08edK7iDsUMSIBAACABsPI5Vp9raKiQoMHD/Ze/nXkyJEa\nP368JOnee+/VoUOHNHToUHk8HsXFxWnp0qUaMWKEfv3rX+u2227Tddddpw4dOkiSunbt6l0v0bZt\nW/Xu3Tvg78coi+fHCVwNQGFhYcDP6XA4VFxcHPDzNkT00jculz76+jrhPzr7B9Dl0stAoJe+Qy99\nh176TjB7eerUKUVFRQXl3P5gs9nkdrsDdr7z9S8hIcHQvkxtAgAAAGAaQQIAAACAaQQJAAAAhK0G\nNEs/KOrTP4IEAAAAwpbVag3omoKGxO12y2qtexzgqk0AAAAIW5GRkaqoqFBlZWXY3H/hYpo0aeK9\nn4Q/eTweWa1WRUZG1vkYBAkAAACELYvF4r0LdEMQTlcTY2oTAAAAANMIEgAAAABMI0gAAAAAMI0g\nAQAAAMA0ggQAAAAA0wgSAAAAAEwjSAAAAAAwjSABAAAAwDSCBAAAAADTCBIAAAAATCNIAAAAADCN\nIAEAAADANIIEAAAAANMIEgAAAABMI0gAAAAAMI0gAQAAAMA0ggQAAAAA0wgSAAAAAEwjSAAAAAAw\njSABAAAAwDSCBAAAAADTCBIAAAAATCNIAAAAADCNIAEAAADANIIEAAAAANMIEgAAAABMI0gAAAAA\nMI0gAQAAAMA0ggQAAAAA0wgSAAAAAEwjSAAAAAAwjSABAAAAwDSCBAAAAADTCBIAAAAATCNIAAAA\nADCNIAEAAADANIIEAAAAANMIEgAAAABMI0gAAAAAMI0gAQAAAMA0ggQAAAAA0wgSAAAAAEwjSAAA\nAAAwjSABAAAAwDSCBAAAAADTCBIAAAAATCNIAAAAADCNIAEAAADANIIEAAAAANNsgThJcXGxsrOz\ndfz4cVksFqWlpWnYsGE6efKksrKydOzYMcXHx+vRRx9V8+bN5fF4tGzZMu3YsUNNmjTRpEmTlJSU\nFIhSAQAAABgQkBGJiIgI/epXv1JWVpaeeuoprVu3Tt99951ycnJ0ww036MUXX9QNN9ygnJwcSdKO\nHTt05MgRvfjiixo/frxeffXVQJQJAAAAwKCABInY2FjviELTpk2VmJgop9OprVu3KiUlRZKUkpKi\nrVu3SpK2bdumgQMHymKxqFOnTiovL5fL5QpEqQAAAAAMCPgaiaKiIh04cEAdOnRQaWmpYmNjJZ0J\nGydOnJAkOZ1OORwO7z52u11OpzPQpQIAAAC4gICskfhRRUWFMjMzNXbsWEVFRV3wdR6P55xtFovl\nnG25ubnKzc2VJM2dO7dW+AgUm80WlPM2RPTSN+hj/ZzdO3rpO/TSd+il79BL36GXvhNOvQxYkHC7\n3crMzNSAAQPUu3dvSVJMTIxcLpdiY2PlcrkUHR0t6cwIRHFxsXffkpIS78jF2dLS0pSWluZ9fPY+\ngeJwOIJy3oaIXvrG5dLHBD8d9+zeXS69DAR66Tv00nfope/QS98JhV4mJBj7KRuQqU0ej0eLFy9W\nYmKi7rjjDu/2nj17Ki8vT5KUl5en5ORk7/b8/Hx5PB59/fXXioqKOm+QAAAAABAcARmR+Oqrr5Sf\nn68rr7xSjz32mCTpnnvuUXp6urKysrRhwwY5HA5NmTJFktStWzdt375dDz/8sBo3bqxJkyYFokwA\nAAAABgUkSHTu3FkrV64873MzZ848Z5vFYtFvf/tbf5cFAAAAoI64szUAAAAA0wgSAAAAAEwjSAAA\nAAAwjSABAAAAwDSCBAAAAADTCBIAAAAATCNIAAAAADCNIAEAAADANIIEAAAAANMIEgAAAABMI0gA\nAAAAMI0gAQAAAMA0ggQAAAAA0wgSAAAAAEwjSAAAAAAwjSABAAAAwDSCBAAAAADTCBIAAAAATCNI\nAAAAADCNIAEAAADANIIEAAAAANMIEgAAAABMI0gAAAAAMI0gAQAAAMA0ggQAAAAA0wgSAAAAAEwj\nSAAAAAAwjSABAAAAwDSCBAAAAADTCBIAAAAATCNIAAAAADCNIAEAAADANIIEAAAAANMIEgAAAABM\nI0gAAAAAMI0gAQAAAMA0ggQAAAAA0wgSAAAAAEwjSAAAAAAwjSABAAAAwDSCBAAAAADTCBIAAAAA\nTCNIAAAAADCNIAEAAADANIIEAAAAANMIEgAAAABMI0gAAAAAMI0gAQAAAMA0ggQAAAAA0wgSAAAA\nAEwjSAAAAAAwjSABAAAAwDSCBAAAAADT6hQkqqqq5Ha7fV0LAAAAgDBhKEgsX75cBQUFkqTt27dr\n3LhxGjt2rLZt2+bX4gAAAACEJkNB4u9//7vatWsnSXrrrbf0u9/9Tn/4wx/0X//1X34tDgAAAEBo\nshl5UWVlpZo0aaKysjIdPXpUffr0kSQVFxf7tTgAAAAAoclQkEhISNDHH3+sI0eOqGvXrpKkEydO\nqHHjxn4tDgAAAEBoMjS16f7779e6deu0e/dujR49WpL0+eefe0MFAAAAgMvLJUckampq9M9//lMz\nZ86sNQIxYMAADRgwwK/FAQAAAAhNlxyRsFqtWr58OdOYAAAAAHgZmtrUo0cPLvUKAAAAwMvQYusf\nfvhB8+bNU6dOnWS322WxWLzPPfTQQ34rDgAAAEBoMhQk2rVr572PBAAAAAAYChJ33323v+sAAAAA\nEEYMBQlJ2rlzpzZu3KjS0lJNnTpV+/fv1+nTp3X99df7sz4AAAAAIcjQYus1a9bolVde0RVXXKE9\ne/ZIkho3bqz//u//9mtxAAAAAEKToSDx/vvva8aMGUpPT5fVemaXxMREFRYW+rU4AAAAAKHJUJA4\nffq0HA5HrW1ut1s2m+GZUQAAAAAaEENB4tprr1VOTk6tbWvWrNF1113nl6IAAAAAhDZDQeI3v/mN\nPvnkE2VkZKiiokKTJ0/Wli1b9Otf/9rf9QEAAAAIQYbmJsXGxuqZZ55RQUGBiouLZbfb1aFDB+96\nCQAAAACXF8OLHCwWizp27KiOHTv6sx4AAAAAYcBQkHjwwQfPu71Ro0ay2+3q1auXhgwZooiICJ8W\nBwAAACA0GQoSt912mz7++GPddtttstvtKi4u1rp169SnTx81b95cq1evVklJicaMGePvegEAAACE\nAENB4qOPPtL06dMVFxfn3datWzfNmTNH8+bN0/XXX6/Zs2cTJAAAAIDLhKHV0i6XS5GRkbW2NWnS\nRC6XS5J0xRVXqLy83PfVAQAAAAhJhkYkevTooeeff16/+MUvZLfbVVJSopycHPXo0UOS9PXXXys+\nPv6C+y9atEjbt29XTEyMMjMzJUkrV67U+vXrFR0dLUm655571L17d0nSO++8ow0bNshqtWrcuHG6\n8cYb6/UmAQAAAPiWoSAxfvx4vfnmm3rllVfkdDoVGxurvn37auTIkZKk1q1ba9q0aRfcf9CgQRo6\ndKiys7Nrbb/99ts1fPjwWtu+++47bdq0SfPmzZPL5dLs2bO1YMECLjULAAAAhBBDQaJx48b65S9/\nqV/+8pfnfb5ly5YX3b9Lly4qKioyVNDWrVvVr18/NWrUSK1atVKbNm1UUFCgTp06GdofAAAAgP8Z\nvo9EYWGhDh48qIqKilrbb7nlljqffN26dcrPz1dSUpLuu+8+NW/eXE6ns9a9KuLi4uR0Os+7f25u\nrnJzcyVJc+fOlcPhqHMtdWWz2YJy3oaIXvoGfayfs3tHL32HXvoOvfQdeuk79NJ3wqmXhoLE22+/\nrf/5n/9R+/bt1aRJk1rP1TVIDBkyxDs1asWKFVq+fLkmTZokj8dj+BhpaWlKS0vzPi4uLq5TLfXh\ncDiCct6GiF76xuXSxwQ/Hffs3l0uvQwEeuk79NJ36KXv0EvfCYVeJiQY+ylrKEi8//77evrpp9W+\nfft6FXW2s6dDpaam6tlnn5Uk72LuHzmdzlqXnQUAAAAQfIZWMDdu3FiJiYk+PfGPl46VpE8++UTt\n2rWTJPXs2VObNm3SDz/8oKKiIn3//ffq0KGDT88NAAAAoH4MjUiMHj1aS5cu1d13362YmJhazxm5\nmtL8+fP15ZdfqqysTBMnTtSoUaO0e/duHTx4UBaLRfHx8Ro/frwkqV27durbt6+mTJkiq9Wq+++/\nnys2AQAAACHGUJBYtGiRJGn9+vXnPLdixYpL7v/II4+cs+1iaytGjBihESNGGCkNAAAAQBAYChIL\nFy70dx0AAAAAwoihIPHjXatrampUWlqq2NhYvxYFAAAAILQZChLl5eV69dVXtWXLFtlsNr3++uva\ntm2bCgoK9K//+q/+rhEAAABAiDG0ivmVV15RVFSUFi1aJJvtTPbo1KmTNm3a5NfiAAAAAIQmQyMS\nX3zxhf785z97Q4QkRUdHq7S01G+FAQAAAAhdhkYkoqKiVFZWVmtbcXExayUAAACAy5ShIJGamqrM\nzEzt2rVLHo9HX3/9tbKzszV48GB/1wcAAAAgBBma2nTXXXepUaNGWrJkiaqrq/Xyyy8rLS1Nw4YN\n83d9AAAAAEKQoSBhsVh0++236/bbb/d3PQAAAADCgKEgsWvXLrVq1UqtWrXS8ePH9cYbb8hqtere\ne+9Vy5Yt/V0jAAAAgBBjaI3EkiVLZLWeeelrr72m6upqWSwW/fnPf/ZrcQAAAABCk6ERCafTKYfD\noerqan3++efe+0lMmDDB3/UBAAAACEGGgkTTpk11/PhxHTp0SG3btlVkZKTcbrfcbre/6wMAAAAQ\nggwFiaFDh2ratGlyu90aO3asJGnv3r1KTEz0Z20AAAAAQpShIJGenq5evXrJarWqTZs2kqS4uDhN\nnDjRr8UBAAAACE2GgoQkJSQkeD/etWuXrFarunTp4peiAAAAAIQ2Q1dtmjVrlvbu3StJysnJ0YIF\nC7RgwQK9/fbbfi0OAAAAQGgyFCQOHTqkTp06SZLWr1+vWbNm6amnntKHH37o1+IAAAAAhCZDU5s8\nHo8k6ciRI5Kktm3bSpLKy8v9VBYAAACAUGYoSFxzzTVaunSpXC6XkpOTJZ0JFS1atPBrcQAAAABC\nk6GpTRkZGYqKilL79u01atQoSVJhYaGGDRvm1+IAAAAAhCZDIxItWrTQvffeW2tb9+7d/VIQAAAA\ngNBn+PKvBw8e1J49e1RWVuZdMyFJo0eP9kthAAAAAEKXoSCRm5ur1157TV27dtVnn32mG2+8UTt3\n7lTPnj39XR8AAACAEGRojcTf/vY3/fu//7see+wxNW7cWI899pimTJmiiIgIf9cHAAAAIAQZChIn\nTpzQtddeK0myWCyqqalRt27d9Omnn/q1OAAAAAChydDUpri4OBUVFalVq1a64oortG3bNrVo0UI2\nm+ElFgAAAAAaEENJ4K677tLhw4fVqlUrjRw5UvPmzZPb7da4ceP8XR8AAACAEGQoSAwaNMj7cbdu\n3bRs2TK53W5FRkb6qy4AAAAAIczw3KTy8nJt375dLpdLsbGx3EcCAAAAuIwZWmy9a9cuZWRkaM2a\nNSooKNDatWuVkZGhL774wt/1AQAAAAhBhkYklixZovHjx6tfv37ebZs3b9aSJUs0f/58vxUHAAAA\nIDQZGpFwuVzq06dPrW29evXS8ePH/VIUAAAAgNBmKEgMHDhQa9eurbXtgw8+0MCBA/1SFAAAAIDQ\nZmhq04EDB/Thhx9q1apViouLk9PpVGlpqTp27KhZs2Z5X/fkk0/6rVAAAAAAocNQkEhNTVVqaqq/\nawEAAAAQJkzfRwIAAAAADK2RAAAAAICzESQAAAAAmEaQAAAAAGDaBYPEH//4R+/Hb775ZkCKAQAA\nABAeLhgkCgsLVVVVJUlavXp1wAoCAAAAEPoueNWm5ORkTZ48Wa1atVJVVVWt+0WcjXtHAAAAAJef\nCwaJSZMmae/evSoqKlJBQYFuvvnmQNYFAAAAIIRd9D4SnTt3VufOneV2u7mXBAAAAAAvQzeku+WW\nW7Rr1y7l5+fL5XIpNjZWAwcO1PXXX+/v+gAAAACEIEOXf12/fr3mz5+vli1bqlevXoqNjdWCBQuU\nm5vr7/oAAAAAhCBDIxKrVq3S9OnTddVVV3m39evXT5mZmUpLS/NXbQAAAABClKERibKyMrVt27bW\ntoSEBJ08edIvRQEAAAAIbYaCROfOnbV8+XJVVlZKkioqKvT666+rU6dOfi0OAAAAQGgyNLXpgQce\n0Pz58zV27Fg1b95cJ0+eVKdOnTR58mR/1wcAAAAgBBkKErGxsXryySdVUlLivWqT3W73d20AAAAA\nQpShIPEju91OgAAAAABgbI0EAAAAAJyNIAEAAADAtEsGiZqaGu3atUtutzsQ9QAAAAAIA5cMElar\nVc8995xsNlPLKQAAAAA0YIamNl177bX6+uuv/V0LAAAAgDBhaJghPj5ezzzzjHr27Cm73S6LxeJ9\nbvTo0X4rDgAAAEBoMhQkqqqqlJycLElyOp1+LQgAAABA6DMUJCZNmuTvOgAAAACEEcMrqL/77jtt\n2bJFpaWluv/++1VYWKgffvhB7du392d9AAAAAEKQocXWmzdv1qxZs+R0OpWfny9JOn36tJYvX+7X\n4gAAAACEJkMjEitXrtSMGTN01VVXafPmzZKk9u3b6+DBg/6sDQAAAECIMjQiUVpaes4UJovFUuvq\nTQAAAAAuH4aCRFJSkndK0482btyoDh06+KUoAAAAAKHN0NSmcePGac6cOdqwYYMqKyv11FNPqbCw\nUNOnT/d3fQAAAABCkKEgkZiYqPnz5+vTTz9Vjx49ZLfb1aNHD0VGRvq7PgAAAAAhyPDlX5s0aaLO\nnTvL6XQqLi6OEAEAAABcxgwFieLiYr344ovat2+fmjVrpvLycnXo0EEPP/yw4uPj/V0jAAAAgBBj\naLF1dna2kpKStGzZMr366qtatmyZrr76amVnZ/u7PgAAAAAhyFCQ+OabbzRmzBjvdKbIyEiNGTNG\n33zzjV+LAwAAABCaDAWJjh07qqCgoNa2/fv3q1OnTn4pCgAAAEBou+AaiRUrVng/bt26tZ555hl1\n795ddrtdJSUl2rFjh/r37x+QIgEAAACElgsGiZKSklqPe/fuLUk6ceKEGjVqpF69eqmqqsq/1QEA\nAAAISRcMEpMmTQpkHQAAAADCiOH7SFRWVurIkSOqqKiotf2aa6655L6LFi3S9u3bFRMTo8zMTEnS\nyZMnlZWVpWPHjik+Pl6PPvqomjdvLo/Ho2XLlmnHjh1q0qSJJk2apKSkJJNvCwAAAIA/GQoSeXl5\nWrp0qWw2mxo3blzruZdffvmS+w8aNEhDhw6tdbnYnJwc3XDDDUpPT1dOTo5ycnI0ZswY7dixQ0eO\nHPHet+LVV1/V008/bfJtAQAAAPAnQ0HijTfe0O9//3t17dq1Tifp0qWLioqKam3bunWrnnjiCUlS\nSkqKnnjiCY0ZM0bbtm3TwIEDZbFY1KlTJ5WXl8vlcik2NrZO5wYAAADge4Yu/2qz2dSlSxefnri0\ntNQbDmJjY3XixAlJktPplMPh8L7ObrfL6XT69NwAAAAA6sfQiMTo0aO1fPlyjRw5UtHR0X4tyOPx\nnLPNYrGc97W5ubnKzc2VJM2dO7dWAAkUm80WlPM2RPTSN+hj/ZzdO3rpO/TSd+il79BL36GXvhNO\nvTQUJBISErRy5UqtW7funOfOvt+EGTExMd4pSy6XyxtQ7Ha7iouLva8rKSm54LSmtLQ0paWleR+f\nvV+gOByOoJy3IaKXvnG59DHBT8c9u3eXSy8DgV76Dr30HXrpO/TSd0KhlwkJxn7KGgoSL730kgYO\nHKh+/fqds9i6rnr27Km8vDz827f7AAAUW0lEQVSlp6crLy9PycnJ3u1r167VTTfdpH379ikqKor1\nEQAAAECIMRQkTp48qdGjR19witGlzJ8/X19++aXKyso0ceJEjRo1Sunp6crKytKGDRvkcDg0ZcoU\nSVK3bt20fft2Pfzww2rcuDH3swAAAABCkKEgMWjQIOXn5yslJaVOJ3nkkUfOu33mzJnnbLNYLPrt\nb39bp/MAAAAACAxDQaKgoEBr167V22+/rZYtW9Z67sknn/RLYQAAAABCl6EgkZqaqtTUVH/XAgAA\nACBMGJ7aBAAAAAA/MhQkNmzYcMHnbrnlFp8VAwAAACA8GAoSH3/8ca3Hx48f15EjR9S5c2eCBAAA\nAHAZMhQkZs2adc62DRs26PDhwz4vCAAAAEDos9Z1x0GDBl10yhMAAACAhsvQiERNTU2tx1VVVcrP\nz1ezZs38UhQAAACA0GYoSNxzzz3nbIuLi9OECRN8XhAAAACA0GcoSCxcuLDW4yZNmig6OtovBQEA\nAAAIfYaCRHx8vL/rAAAAABBGLhoknnzyyYvubLFYNHPmTJ8WBAAAACD0XTRIDBgw4LzbnU6n1qxZ\no8rKSr8UBQAAACC0XTRI/PRmc2VlZXrnnXe0fv169evXTyNHjvRrcQAAAABCk6E1EqdOndKqVau0\nbt06de/eXc8++6zatGnj79oAAAAAhKiLBomqqiq99957Wr16tbp06aI//elPateuXaBqAwAAABCi\nLhokMjIyVFNTo+HDh+vqq69WaWmpSktLa73m+uuv92uBAAAAAELPRYNE48aNJUkffPDBeZ+3WCzn\n3GMCAAAAQMN30SCRnZ0dqDoAAAAAhBFrsAsAAAAAEH4IEgAAAABMI0gAAAAAMI0gAQAAAMA0ggQA\nAAAA0wgSAAAAAEwjSAAAAAAwjSABAAAAwDSCBAAAAADTCBIAAAAATCNIAAAAADCNIAEAAADANIIE\nAAAAANNswS4AAOrC8oR/jnvYP4cFAKDBYUQCAAAAgGkECQAAAACmESQAAAAAmEaQAAAAAGAaQQIA\nAACAaQQJAAAAAKYRJAAAAACYRpAAAAAAYBo3pAMgSUpITPTLcQsPc4s3AAAaIkYkAAAAAJhGkAAA\nAABgGkECAAAAgGkECQAAAACmESQAAAAAmEaQAAAAAGAaQQIAAACAaQQJAAAAAKYRJAAAAACYRpAA\nAAAAYBpBAgAAAIBpBAkAAAAAphEkAAAAAJhmC3YBAMxJSEy89GsCUAcAALi8MSIBAAAAwDSCBAAA\nAADTCBIAAAAATCNIAAAAADCNxdYAcJafLmb31cL1wsOHfXQkAABCAyMSAAAAAEwjSAAAAAAwjSAB\nAAAAwDSCBAAAAADTCBIAAAAATCNIAAAAADCNIAEAAADANIIEAAAAANMIEgAAAABMI0gAAAAAMI0g\nAQAAAMA0ggQAAAAA0wgSAAAAAEwjSAAAAAAwjSABAAAAwDSCBAAAAADTbMEuICMjQ5GRkbJarYqI\niNDcuXN18uRJZWVl6dixY4qPj9ejjz6q5s2bB7tUAAAAAP9f0IOEJM2aNUvR0dHexzk5ObrhhhuU\nnp6unJwc5eTkaMyYMUGsEAAAAMDZQnJq09atW5WSkiJJSklJ0datW4NcEQAAAICzhcSIxFNPPSVJ\nGjx4sNLS0lRaWqrY2FhJUmxsrE6cOHHe/XJzc5WbmytJmjt3rhwOR2AKPovNZgvKeRsietkw8X96\nxuXeB76+fYde+g699B166Tvh1MugB4nZs2crLi5OpaWlmjNnjhISEgzvm5aWprS0NO/j4uJif5R4\nUQ6HIyjnbYjopTHGv0JCA/+nZ1zufeDr23fope/QS9+hl74TCr00+vt40Kc2xcXFSZJiYmKUnJys\ngoICxcTEyOVySZJcLlet9RMAAAAAgi+oQaKiokKnT5/2frxz505deeWV6tmzp/Ly8iRJeXl5Sk5O\nDmaZAAAAAH4iqFObSktL9cILL0iSqqur1b9/f9144426+uqrlZWVpQ0bNsjhcGjKlCnBLBMAAADA\nTwQ1SLRu3VrPP//8OdtbtGihmTNnBqEiAAgvCYmJfjlu4eHDfjkuAKDhCPoaCQAAAADhhyABAAAA\nwDSCBAAAAADTCBIAAAAATCNIAAAAADCNIAEAAADANIIEAAAAANMIEgAAAABMC+oN6QA0fP66YZqe\n8M9hAQCAMYxIAAAAADCNIAEAAADANIIEAAAAANMIEgAAAABMY7E14Cd+W2QMAAAQAhiRAAAAAGAa\nIxIAgHP4Y0QtQVLh4cM+Py4AIDgYkQAAAABgGkECAAAAgGkECQAAAACmESQAAAAAmEaQAAAAAGAa\nQQIAAACAaQQJAAAAAKZxHwkACADudA4AaGgYkQAAAABgGkECAAAAgGkECQAAAACmsUYCgCTJ8oR/\njuvx03EBAEBwESR8yF+LKQsPH/bLcQEAAIC6YmoTAAAAANMYkcBlj8tyAgAAmMeIBAAAAADTGJEA\nAIQ91qgBQOAxIgEAAADANEYkAOAsXAYXAABjGJEAAAAAYBpBAgAAAIBpBAkAAAAAphEkAAAAAJhG\nkAAAAABgGldtAoAwxlWmAADBwogEAAAAANMIEgAAAABMI0gAAAAAMI01EgCAgElITAx2Cab4q97C\nw4f9clwACCRGJAAAAACYxoiED/nr6in83QoAAAChhhEJAAAAAKYRJAAAAACYRpAAAAAAYBpBAgAA\nAIBpLLYGwoy/FvUDAACYQZAAAJzDX4HV46fjhpv63p8i4QLbuT8FgEBiahMAAAAA0xiRAPyEKUgA\nGgru8A3gfBiRAAAAAGAaIxJhINz+ElSfei8071fiL1cAcCn++nkBAOfDiAQAAAAA0xiRwGWPtQwI\nBD7PAAANDUECgF/xCzQAAA0TU5sAAAAAmMaIRBjw1190WboMAACAumJEAgAAAIBpjEhcxrhMIAAA\nAOqKIAEACHv+mgLq8dNxw63ecGPmD2UXu3/RT3E/I6A2pjYBAAAAMI0RCQBAwHA5YIQzf00JZqQD\n4YoRCQAAAACmMSIBAMAFMILiX1z0AwhvjEgAAAAAMI0RCQAAGohwG0HhKlNAeCNIXMa4/CAAADDr\nQlPSzFxK93xYdB5+mNoEAAAAwDRGJAAAAAzw20g+l5VFmGJEAgAAAIBpjEjA5/y22O8VLhMIAA0J\na/WA8EaQAAAADUq4Xb0KCFchHSQ+++wzLVu2TDU1NUpNTVV6enqwSwIAAACgEA4SNTU1WrJkiaZP\nny673a5p06apZ8+eatu2bbBLAwAAgI/5607n/lp0nuinKdeV0yr9clx/CNnF1gUFBWrTpo1at24t\nm82mfv36aevWrcEuCwAAAIBCeETC6XTKbrd7H9vtdu3bt6/Wa3Jzc5WbmytJmjt3rhIS6nsrlLr5\n8byeWZ6gnB8AAISxWf45rN9+K/KE1+87/uqDP3/vC9bvtGaF7IiE5zyfpBaLpdbjtLQ0zZ07V3Pn\nzg1UWeeYOnVq0M7d0NBL36CPvkMvfYde+g699B166Tv00nfCqZchGyTsdrtKSkq8j0tKShQbGxvE\nigAAAAD8KGSDxNVXX63vv/9eRUVFcrvd2rRpk3r27BnssgAAAABIinjiiSeeCHYR52O1WtWmTRu9\n9NJLWrt2rQYMGKA+ffoEu6zzSkpKCnYJDQa99A366Dv00nfope/QS9+hl75DL30nXHpp8ZxvMQIA\nAAAAXETITm0CAAAAELoIEgAAAABMC9n7SIS6zz77TMuWLVNNTY1SU1OVnp4e7JLCxqJFi7R9+3bF\nxMQoMzNTknTy5EllZWXp2LFjio+P16OPPqrmzZsHudLQV1xcrOzsbB0/flwWi0VpaWkaNmwY/ayD\nqqoqzZo1S263W9XV1erTp49GjRqloqIizZ8/XydPntTPfvYz/e53v5PNxrfOS6mpqdHUqVMVFxen\nqVOn0sd6yMjIUGRkpKxWqyIiIjR37ly+xuugvLxcixcv1qFDh2SxWPTggw8qISGBPppUWFiorKws\n7+OioiKNGjVKKSkp9LIOVq9erQ0bNshisahdu3aaNGmSjh8/HjbfL1kjUQc1NTWaPHmypk+fLrvd\nrmnTpmny5Mlq27ZtsEsLC19++aUiIyOVnZ3tDRJvvPGGmjdvrvT0dOXk5OjkyZMaM2ZMkCsNfS6X\nSy6XS0lJSTp9+rSmTp2qxx57TB999BH9NMnj8aiyslKRkZFyu92aOXOmxo4dq9WrV6t379666aab\n9Je//EVXXXWVhgwZEuxyQ97q1au1f/9+7+flvHnz6GMdZWRk6JlnnlF0dLR3G98zzVu4cKGuvfZa\npaamyu12q7KyUu+88w59rIeamhpNmDBBTz/9tNatW0cvTXI6nZoxY4aysrLUuHFjzZs3T927d9f2\n7dvD5vslU5vqoKCgQG3atFHr1q1ls9nUr18/bd26NdhlhY0uXbqc81eKrVu3KiUlRZKUkpJCPw2K\njY31XtmhadOmSkxMlNPppJ91YLFYFBkZKUmqrq5WdXW1LBaLdu/e7b1i3KBBg+ilASUlJdq+fbtS\nU1MlnQlp9NG3+Bo359SpU9qzZ49uueUWSZLNZlOzZs3oYz198cUXatOmjeLj4+llHdXU1KiqqkrV\n1dWqqqpSy5Ytw+r7ZWiOk4Q4p9Mpu93ufWy327Vv374gVhT+SktLvTccjI2N1YkTJ4JcUfgpKirS\ngQMH1KFDB/pZRzU1NXr88cd15MgR3XrrrWrdurWioqIUEREhSYqLi5PT6QxylaHvr3/9q8aMGaPT\np09LksrKyuhjPT311FOSpMGDBystLY2vcZOKiooUHR2tRYsW6dtvv1VSUpLGjh1LH+tp48aNuumm\nmyTxc7wu4uLidOedd+rBBx9U48aN9fOf/1xJSUlh9f2SIFEH55sNZrFYglAJcEZFRYUyMzM1duxY\nRUVFBbucsGW1WvX888+rvLxcL7zwgg4fPhzsksLOp59+qpiYGCUlJWn37t3BLqdBmD17tuLi4lRa\nWqo5c+YoISEh2CWFnerqah04cEC/+c1v1LFjRy1btkw5OTnBLiusud1uffrpp7r33nuDXUrYOnny\npLZu3ars7GxFRUVp3rx5+uyzz4JdlikEiTqw2+0qKSnxPi4pKfGmcNRNTEyMXC6XYmNj5XK5as0F\nxsW53W5lZmZqwIAB6t27tyT6WV/NmjVTly5dtG/fPp06dUrV1dWKiIiQ0+lUXFxcsMsLaV999ZW2\nbdumHTt2qKqqSqdPn9Zf//pX+lgPP/YqJiZGycnJKigo4GvcJLvdLrvdro4dO0qS+vTpo5ycHPpY\nDzt27NDPfvYztWzZUhI/d+riiy++UKtWrby96t27t7766quw+n7JGok6uPrqq/X999+rqKhIbrdb\nmzZtUs+ePYNdVljr2bOn8vLyJEl5eXlKTk4OckXhwePxaPHixUpMTNQdd9zh3U4/zTtx4oTKy8sl\nnbmC0xdffKHExERdd9112rJliyTpo48+4mv9Eu69914tXrxY2dnZeuSRR3T99dfr4Ycfpo91VFFR\n4Z0iVlFRoZ07d+rKK6/ka9ykli1bym63q7CwUNKZX+Datm1LH+vh7GlNEj936sLhcGjfvn2qrKyU\nx+Pxfl6G0/dLrtpUR9u3b9drr72mmpoa3XzzzRoxYkSwSwob8+fP15dffqmysjLFxMRo1KhRSk5O\nVlZWloqLi+VwODRlyhQuG2fA3r17NXPmTF155ZXe6XX33HOPOnbsSD9N+vbbb5Wdna2amhp5PB71\n7dtXI0eO1NGjR8+5DF+jRo2CXW5Y2L17t959911NnTqVPtbR0aNH9cILL0g6Mz2nf//+GjFihMrK\nyvgaN+ngwYNavHix3G63WrVqpUmTJsnj8dDHOqisrNSDDz6ohQsXeqfT8jlZNytXrtSmTZsUERGh\nq666ShMnTpTT6Qyb75cECQAAAACmMbUJAAAAgGkECQAAAACmESQAAAAAmEaQAAAAAGAaQQIAAACA\naQQJAAAAAKYRJAAAPvHEE09o3Lhx+uGHH4JdCgAgAAgSAIB6Kyoq0p49eyRJ27ZtC3I1AIBAsAW7\nAABA+MvPz1enTp3UoUMH5eXlqW/fvpLO3O02Oztbe/bsUUJCgn7+859r9+7dmj17tiTp8OHDWrp0\nqb755htFR0dr9OjR6tevXzDfCgDAIEYkAAD1lpeXp/79+2vAgAH6/PPPdfz4cUnSkiVLFBkZqb/8\n5S/KyMhQXl6ed5+KigrNmTNH/fv316uvvqrJkydryZIlOnToULDeBgDABIIEAKBe9u7dq+LiYvXt\n21dJSUlq3bq1/v73v6umpkb/+Mc/NGrUKDVp0kRt27ZVSkqKd7/t27crPj5eN998syIiIpSUlKTe\nvXtry5YtQXw3AACjmNoEAKiXjz76SF27dlV0dLQkqX///t4Riurqatntdu9rz/742LFj2rdvn8aO\nHevdVl1drYEDBwasdgBA3REkAAB1VlVVpc2bN6umpkYPPPCAJMntdqu8vFzHjx9XRESESkpKlJCQ\nIEkqKSnx7mu329WlSxfNmDEjKLUDAOqHIAEAqLNPPvlEVqtVmZmZstn+70dKVlaW8vPz1atXL735\n5puaOHGiiouLlZeXJ4fDIUnq0aOH/vM//1P5+fneBdYHDx5UZGSk2rZtG5T3AwAwjjUSAIA6y8vL\n08033yyHw6GWLVt6/9166636+OOPdf/99+vUqVMaP368Fi5cqJtuukmNGjWSJDVt2lTTp0/Xxo0b\nNWHCBI0fP17/8R//IbfbHeR3BQAwwuLxeDzBLgIAcHl44403dPz4cT300EPBLgUAUE+MSAAA/Obw\n4cP69ttv5fF4VFBQoP/93/9Vr169gl0WAMAHWCMBAPCb06dPa8GCBXK5XIqJidEdd9yh5OTkYJcF\nAPABpjYBAAAAMI2pTQAAAABMI0gAAAAAMI0gAQAAAMA0ggQAAAAA0wgSAAAAAEz7f64dlnzmRLwg\nAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8c3571edd8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "figure = plt.figure(figsize=(13,8))\n",
    "plt.hist([data[data['Survived']==1]['Age'],data[data['Survived']==0]['Age']], stacked=True, color = ['g','r'],\n",
    "         bins = 30,label = ['Survived','Dead'])\n",
    "plt.xlabel('Age')\n",
    "plt.ylabel('Number of passengers')\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "_cell_guid": "b91e95d3-2114-4e59-9ef5-a1068b609361",
    "_uuid": "e26c63f51d9e6d0a27068021c7321ce8a25e1277"
   },
   "outputs": [
    {
     "data": {
      "image/png": "../data/women-children.jpg",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "execution_count": 8,
     "metadata": {
      "image/png": {
       "height": 1000,
       "width": 1000
      }
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from IPython.display import Image\n",
    "Image(\"../data/women-children.jpg\",height=1000,width=1000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "_cell_guid": "3a4ab31d-e228-4e02-80e6-0d9d465671ff",
    "_uuid": "c5419692701a825b44cd06cc93bee5d81e3158eb"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f8c3560f4e0>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAxIAAAHmCAYAAADnWLjtAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMS4wLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvpW3flQAAIABJREFUeJzt3XuclXW9L/DPmhkuchHnAip4yRvb\nvJ0UULIUEnKbdqG26fFS4cmscHvd20J3Se002SqBKNU+qZjZ2V3OcbPNFIt4iR2NDghesExJ27sk\nRJgRhrvDzPnD45zYeFmPsGYG5v1+vXw561nPetb3mefHzPrM7/d7fqW2tra2AAAAFFDV2QUAAAA7\nH0ECAAAoTJAAAAAKEyQAAIDCBAkAAKAwQQIAAChMkAAAAAoTJAAAgMIECQAAoDBBAgAAKKymswvY\nkZYtW9ap79/Q0JCVK1d2ag10Lm2ge3P90QbQBtjZ28DgwYPL3lePBAAAUJggAQAAFCZIAAAAhe1S\ncyQAAOhe2trasnHjxrS2tqZUKnV2OXnxxRezadOmzi7jTbW1taWqqiq9e/feru+ZIAEAwE5r48aN\n6dGjR2pqusbH2pqamlRXV3d2GW+ppaUlGzduzG677fa2j2FoEwAAO63W1tYuEyJ2JjU1NWltbd2u\nYwgSAADstLrCcKad1fZ+7wQJAACgMP1AAADsMoZ8Z8gOPd4Ln3nhLfe56aabMmvWrFRXV6eqqiqT\nJ0/OMcccs13v+7Of/SzPPPNM/vZv/3a7jpMkhxxySJ599tntPs5/JkgAAMDbtHDhwsyZMyezZ89O\nr169snr16mzYsKGs17a0tLzh/I6TTz45J5988o4sdYcztAkAAN6mFStWpK6uLr169UqS1NfXZ6+9\n9spxxx2XxsbGJMnjjz+e008/PUkyZcqUfOELX8hZZ52VSy65JB/84Afzu9/9rv14p59+ep544on8\n8Ic/zD/8wz9kzZo1Oe6449onRm/YsCHDhw/PK6+8kj/84Q8555xzcsopp+SjH/1oli5dmiT5j//4\nj3zoQx/Kqaeemuuvv75i5y5IAADA2zRq1KgsW7Ys733ve3PllVfmkUceecvXPPHEE7n99tszY8aM\nfPjDH85PfvKTJK+uQbF8+fIcddRR7fvuvvvuOeyww/KrX/0qyatDnkaPHp0ePXrkC1/4Qr72ta9l\n9uzZ+fKXv5wrr7wySXL11Vfnk5/8ZO67774MGjSoAmf9qg4b2nThhRemd+/eqaqqSnV1dSZPnpy1\na9dm6tSpeemllzJw4MBcdtll6devX9ra2jJz5swsXrw4vXr1yoQJE3LggQd2VKkAAFCWvn37Zvbs\n2fn1r3+dRx55JBdccEH7B/o3cvLJJ7ev3/ChD30oZ511Vv7+7/8+P/nJT/LBD35wm/0//OEP5557\n7sl73vOe3HPPPfnUpz6VdevW5dFHH81nP/vZ9v02b96cJFmwYEG+853vJEn+5m/+Jtdee+2OOt2t\ndOgciUmTJmX33Xdvfzxr1qwceeSRGTduXGbNmpVZs2bl3HPPzeLFi7N8+fJMnz49zz77bG699dZ8\n/etf78hSAQCgLNXV1Tn++ONz/PHH5/DDD88PfvCDrdZp+M8rXffp06f967333ju1tbX5zW9+k3vu\nuSf/9E//tM3xTz755Fx33XVpamrKE088kfe85z1Zv359dt999/z85z9/3Zo64ra4nTq0acGCBRk1\nalSSV7uFFixYkOTVSSsnnnhiSqVShg4dmnXr1qWpqakzSwUAgG0sXbo0zz33XPvjJUuWZJ999sk+\n++yTJ554Ikny05/+9E2P8ZGPfCTf+ta30tzcnHe+853bPN+3b9+8613vytVXX52xY8emuro6/fv3\nz7777ts+LKqtrS1PPfVUkmTEiBH5t3/7tyTJ3XffvUPO8/V0aI/Ea90q73//+zN27NisXr06tbW1\nSZLa2tqsWbMmSdLY2JiGhob219XX16exsbF939fMmTMnc+bMSZJMnjx5q9d0hpqamk6vgc6lDXRv\nrj/aANpAx3vxxRe3uvPRi59/sUPff9OmTbnqqquyZs2aVFdX54ADDsiNN96YZ599NpdddlluueWW\nHHPMMSmVSqmpqUlVVVWqqqq2qvnDH/5wrr766lx++eXt21+7lexrjz/60Y/m/PPPz7/+67+2b/vW\nt76VL37xi5k+fXpaWloybty4/Jf/8l9y7bXX5vOf/3xuv/32nHbaaUnyuneH6tWr13a111JbW1vb\n2351AY2Njamrq8vq1atzzTXX5Lzzzsv111+fO+64o32f8847LzNnzsx1112Xj370ozn00EOTJP/4\nj/+Yc8899y3nSSxbtqySp/CWGhoasnLlyk6tgc6lDXRvrj/aANpAx1u/fv1WQ4U6W01NTVpaWjq7\njLK83vdu8ODBZb++w4Y21dXVJUkGDBiQESNGZOnSpRkwYED7kKWmpqb2+RP19fVb/SNctWrVNr0R\nAABA5+mQILFx48b2hTk2btyYJ554Ivvtt1+GDx+eefPmJUnmzZuXESNGJEmGDx+ehx56KG1tbXnm\nmWfSp08fQQIAALqQDpkjsXr16tx4441Jki1btuS9731v3vWud+Wggw7K1KlTM3fu3DQ0NOTyyy9P\nkhx99NFZtGhRLr744vTs2TMTJkzoiDK3W89evVJ+Z1D5lr3w1kuzAwBAR+qwORIdobPnSAweMqQi\nxxUkdh7GxnZvrj/aANpAxzNH4u3baeZIAAAAuw5BAgAAKKxD15EAAIBK2tFDzcsZYr7vvvvm0EMP\nTUtLS2pqanL66afnM5/5TKqqtv9v9lOmTEnfvn3zuc99bruPtaMJEgAAsB169+6dn//850leXdLg\nc5/7XJqbm/P3f//3nVxZZRnaBAAAO8jAgQNz/fXXZ+bMmWlra8uWLVvyta99LaeeemrGjh2b733v\ne0mSdevW5Ywzzshf//VfZ8yYMXnggQfaj3HTTTflhBNOyJlnnpnf//73nXUqb0mPBAAA7ED7779/\n2trasnLlyjzwwAPp379/7rvvvmzatCnjxo3LqFGjMnjw4Nx2223p379/Ghsb86EPfSgnn3xynnzy\nydxzzz352c9+lpaWlpxyyik56qijOvuUXpcgAQAAO9hrKyzMmzcvv/3tb/PTn/40SdLc3Jznn38+\ne++9dyZPnpxf//rXKZVKWb58eV566aX8+te/zimnnJLddtstSfL+97+/087hrQgSAACwA/37v/97\nqqqq0tDQkCS55pprMnr06K32+eEPf5hVq1bl/vvvT48ePXLcccdl06ZNSZJSqdTRJb8t5kgAAMAO\nsnLlykycODHnnXdeSqVSRo0alTvvvDOvvPJKkuT3v/991q9fn+bm5jQ0NKRHjx55+OGH86c//SlJ\nMnLkyMyePTsbNmzI2rVr2ydxd0V6JAAA2GWUc7vWHW3jxo15//vf337717/5m7/JBRdckCQ5++yz\n88c//jGnnHJK2traUldXl9tvvz0f+9jH8qlPfSof+MAHcvjhh+fggw9Okhx55JHt8yX22WefHHfc\ncR1+PuUqtb02gGsXsGzZsk59/x193+LXdMY/CN6ehoaGrFy5srPLoJO4/mgDaAMdb/369enTp09n\n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\nuraygsR/+2//Lf/n//yfXHjhhdm4cWMuueSSzJ8/P5/61KcqXR8AANAFlTU2qba2Ntddd12WLl2a\nlStXpr6+PgcffHD7fAkAAKB7KXuSQ6lUyiGHHJJDDjmkkvUAAAA7gbKCxOc///nX3d6jR4/U19fn\n2GOPzcknn5zq6uodWhwAANA1lRUkPvCBD+SXv/xlPvCBD6S+vj4rV67MAw88kJEjR6Zfv3659957\ns2rVqpx77rmVrhcAAOgCygoSDz74YL70pS+lrq6ufdvRRx+da665Jt/4xjdyxBFH5Gtf+5ogAQAA\n3URZs6WbmprSu3fvrbb16tUrTU1NSZK9994769at2/HVAQAAXVJZPRLDhg3LDTfckI9+9KOpr6/P\nqlWrMmvWrAwbNixJ8swzz2TgwIEVLRQAAOg6ygoSF1xwQX784x/nO9/5ThobG1NbW5t3v/vdOf30\n05Mke+65Z6688sqKFgoAAHQdZQWJnj175pxzzsk555zzus/vscceO7QoAACgayt7HYlly5blD3/4\nQzZu3LjV9pNOOmmHFwUAAHRtZQWJu+++O//rf/2v7L///unVq9dWzwkSAADQ/ZQVJO677758/etf\nz/7771/pegAAgJ1A2XMkhgwZ8rbfZPPmzZk0aVJaWlqyZcuWjBw5MmeccUZWrFiRadOmZe3atTng\ngANy0UUXpaamJq+88kpuueWWPPfcc+nfv38uvfTSDBo06G2/PwAAsGOVtY7EmWeemdtvvz1NTU1p\nbW3d6r9y9OjRI5MmTcoNN9yQ66+/Po899lieeeaZ3HXXXTnttNMyffr09O3bN3Pnzk2SzJ07N337\n9s3NN9+c0047Ld///vff/hkCAAA7XFk9Et/85jeTJL/4xS+2ee6HP/zhW76+VCq1L2i3ZcuWbNmy\nJaVSKU899VQuueSSJMno0aPz4x//OCeffHIWLlyYj3/840mSkSNH5vbbb09bW1tKpVJ5ZwUAAFRU\nWUHilltu2e43am1tzRe/+MUsX748f/3Xf50999wzffr0SXV1dZKkrq4ujY2NSZLGxsbU19cnSaqr\nq9OnT580Nzdn99133+qYc+bMyZw5c5IkkydPTkNDw3bX2RXtque1K6qpqXG9ujHXH20AbYDu1AbK\nChKvrVrd2tqa1atXp7a2tvAbVVVV5YYbbsi6dety44035oUXXnjDfdva2rbZ9nq9EWPHjs3YsWPb\nH69cubJwXTvS4Aodt7PPi/I1NDS4Xt2Y6482gDbAzt4GBg8u/xNtWUFi3bp1ufXWWzN//vzU1NTk\ne9/7XhYuXJilS5fmv/7X/1qouL59++awww7Ls88+m/Xr12fLli2prq5OY2Nj6urqkiT19fVZtWpV\n6uvrs2XLlqxfvz79+vUr9D4AAEDllDXZ+jvf+U769OmTb37zm6mpeTV7DB06NI888khZb7JmzZqs\nW7cuyat3cHryySczZMiQHH744Zk/f36S5MEHH8zw4cOTJMOGDcuDDz6YJJk/f34OP/xw8yMAAKAL\nKatH4sknn8w///M/t4eIJNl9992zevXqst6kqakpM2bMSGtra9ra2vLud787w4YNyz777JNp06bl\nBz/4QQ444ID2xe1OOumk3HLLLbnooovSr1+/XHrppW/j1AAAgEopK0i8Ntn5L+dGrFy5suy5Evvv\nv3+uv/76bbbvueeeue6667bZ3rNnz1x++eVlHRsAAOh4ZQ1tGjNmTKZMmZIlS5akra0tzzzzTGbM\nmJH3v//9la4PAADogsrqkfjIRz6SHj165LbbbsuWLVvyrW99K2PHjs2pp55a6foAAIAuqKwgUSqV\nctppp+W0006rdD0AAMBOoKwgsWTJkgwaNCiDBg3Kyy+/nLvuuitVVVU5++yzs8cee1S6RgAAoIsp\na47EbbfdlqqqV3f97ne/my1btqRUKuWf//mfK1ocAADQNZXVI9HY2JiGhoZs2bIljz/+ePt6Ep/9\n7GcrXR8AANAFlRUkdtttt7z88sv54x//mH322Se9e/dOS0tLWlpaKl0fAADQBZUVJE455ZRceeWV\naWlpyfjx45MkTz/9dIYMGVLJ2gAAgC6qrCAxbty4HHvssamqqspee+2VJKmrq8vnPve5ihYHAAB0\nTWUFiSQZPHhw+9dLlixJVVVVDjvssIoUBQAAdG1l3bVp0qRJefrpp5Mks2bNyk033ZSbbropd999\nd0WLAwAAuqaygsQf//jHDB06NEnyi1/8IpMmTcq1116bn//85xUtDgAA6JrKGtrU1taWJFm+fHmS\nZJ999kmSrFu3rkJlAQAAXVlZQeKv/uqvcvvtt6epqSkjRoxI8mqo6N+/f0WLAwAAuqayhjZdeOGF\n6dOnT/bff/+cccYZSZJly5bl1FNPrWhxAABA11RWj0T//v1z9tlnb7XtmGOOqUhBAABA11f27V//\n8Ic/5Le//W2am5vb50wkyZlnnlmRwgAAgK6rrCAxZ86cfPe7381RRx2Vxx57LO9617vyxBNPZPjw\n4ZWuDwAA6ILKmiPxb//2b7nqqqtyxRVXpGfPnrniiity+eWXp7q6utL1AQAAXVBZQWLNmjV55zvf\nmSQplUppbW3N0UcfnUcffbSixQEAAF1TWUOb6urqsmLFigwaNCh77713Fi5cmP79+6empuwpFgAA\nwC6krCTwkY98JC+88EIGDRqU008/Pd/4xjfS0tKS8847r9L1AQAAXVBZQWL06NHtXx999NGZOXNm\nWlpa0rt370rVBQAAdGFlj01at25dFi1alKamptTW1lpHAgAAurGyJlsvWbIkF154Ye6///4sXbo0\ns2fPzoUXXpgnn3yy0vUBAABdUFk9ErfddlsuuOCCHH/88e3bfvWrX+W2227LtGnTKlYcAADQNZXV\nI9HU1JSRI0dute3YY4/Nyy+/XJGiAACArq2sIHHiiSdm9uzZW2372c9+lhNPPLEiRQEAAF1bWUOb\nnn/++fz85z/PPffck7q6ujQ2Nmb16tU55JBDMmnSpPb9vvrVr1asUAAAoOsoK0iMGTMmY8aMqXQt\nAADATqLwOhIAAABlzZEAAAD4S4IEAABQmCABAAAU9oZB4h/+4R/av/7xj3/cIcUAAAA7hzcMEsuW\nLcvmzZuTJPfee2+HFQQAAHR9b3jXphEjRuSSSy7JoEGDsnnz5q3Wi/hL1o4AAIDu5w2DxIQJE/L0\n009nxYoVWbp0ad73vvd1ZF0AAEAX9qbrSBx66KE59NBD09LSYi0JAACgXVkL0p100klZsmRJHnro\noTQ1NaW2tjYnnnhijjjiiErXBwAAdEFl3f71F7/4RaZNm5Y99tgjxx57bGpra3PTTTdlzpw5la4P\nAADogsrqkbjnnnvypS99Ke94xzvatx1//PGZMmVKxo4dW6naAACALqqsHonm5ubss88+W20bPHhw\n1q5dW5GiAACArq2sIHHooYfmzjvvzKZNm5IkGzduzPe+970MHTq0osUBAABdU1lDmz7zmc9k2rRp\nGT9+fPr165e1a9dm6NChueSSSypdHwAA0AWVFSRqa2vz1a9+NatWrWq/a1N9fX2lawMAALqosoLE\na+rr6wUIAACgvDkSAAAAf0mQAAAACnvLINHa2polS5akpaWlI+oBAAB2Am8ZJKqqqnL99denpqbQ\ndAoAAGAXVtbQpne+85155plnKl0LAACwkyirm2HgwIG57rrrMnz48NTX16dUKrU/d+aZZ1asOAAA\noGsqK0hs3rw5I0aMSJI0NjZWtCAAAKDrKytITJgwodJ1AAAAO5GyZ1D/6U9/yvz587N69ep8+tOf\nzrJly/LKK69k//33r2R9AABAF1TWZOtf/epXmTRpUhobG/PQQw8lSTZs2JA777yzosUBAABdU1k9\nEj/60Y/y5S9/Oe94xzvyq1/9Kkmy//775w9/+EMlawMAALqosnokVq9evc0QplKptNXdmwAAgO6j\nrCBx4IEHtg9pes3DDz+cgw8+uCJFAQAAXVtZQ5vOO++8XHPNNZk7d242bdqUa6+9NsuWLcuXvvSl\nStcHAAB0QWUFiSFDhmTatGl59NFHM2zYsNTX12fYsGHp3bt3pesDAAC6oLJv/9qrV68ceuihaWxs\nTF1dnRABAADdWFlBYuXKlZk+fXqeffbZ9O3bN+vWrcvBBx+ciy++OAMHDqx0jQAAQBdT1mTrGTNm\n5MADD8zMmTNz6623ZubMmTnooIMyY8aMStcHAAB0QWUFieeeey7nnntu+3Cm3r1759xzz81zzz1X\n0eIAAICuqawgccghh2Tp0qVbbfv973+foUOHVqQoAACga3vDORI//OEP27/ec889c9111+WYY45J\nfX19Vq1alcWLF+e9731vhxQJAAB0LW8YJFatWrXV4+OOOy5JsmbNmvTo0SPHHntsNm/eXNnqAACA\nLukNg8SECRM6sg4AAGAnUvY6Eps2bcry5cuzcePGrbb/1V/91Q4vCgAA6NrKChLz5s3L7bffnpqa\nmvTs2XOr5771rW9VpDAAAKDrKitI3HXXXfm7v/u7HHXUUZWuBwAA2AmUdfvXmpqaHHbYYZWuBQAA\n2EmUFSTOPPPM3HnnnVmzZk2l6wEAAHYCZQ1tGjx4cH70ox/lgQce2Oa5v1xv4o2sXLkyM2bMyMsv\nv5xSqZSxY8fm1FNPzdq1azN16tS89NJLGThwYC677LL069cvbW1tmTlzZhYvXpxevXplwoQJOfDA\nA4ufHQAAUBFlBYmbb745J554Yo4//vhtJluXo7q6Op/4xCdy4IEHZsOGDZk4cWKOOuqoPPjggzny\nyCMzbty4zJo1K7Nmzcq5556bxYsXZ/ny5Zk+fXqeffbZ3Hrrrfn6179e+H0BAIDKKGto09q1a3Pm\nmWdmv/32y1577bXVf+Wora1t71HYbbfdMmTIkDQ2NmbBggUZNWpUkmTUqFFZsGBBkmThwoU58cQT\nUyqVMnTo0Kxbty5NTU1v5/wAAIAKKKtHYvTo0XnooYfaP/RvjxUrVuT555/PwQcfnNWrV6e2tjbJ\nq2HjtTkYjY2NaWhoaH9NfX3uOrDZAAASiUlEQVR9Ghsb2/d9zZw5czJnzpwkyeTJk7d6za5kVz2v\nXVFNTY3r1Y25/mgDaAN0pzZQVpBYunRpZs+enbvvvjt77LHHVs999atfLfvNNm7cmClTpmT8+PHp\n06fPG+7X1ta2zbZSqbTNtrFjx2bs2LHtj1euXFl2LZUwuELH7ezzonwNDQ2uVzfm+qMNoA2ws7eB\nwYPL/0RbVpAYM2ZMxowZ87YLSpKWlpZMmTIlJ5xwQo477rgkyYABA9LU1JTa2to0NTVl9913T/Jq\nD8RfXoBVq1Zt0xsBAAB0nrKHNm2Ptra2fPvb386QIUPywQ9+sH378OHDM2/evIwbNy7z5s3LiBEj\n2rfPnj0773nPe/Lss8+mT58+ggQAAHQhZQWJuXPnvuFzJ5100lu+/ne/+10eeuih7LfffrniiiuS\nJGeddVbGjRuXqVOnZu7cuWloaMjll1+eJDn66KOzaNGiXHzxxenZs2cmTJhQTpkAAEAHKStI/PKX\nv9zq8csvv5zly5fn0EMPLStIHHroofnRj370us9dffXV22wrlUo5//zzyykNAADoBGUFiUmTJm2z\nbe7cuXnhhRd2eEEAAEDXV1aQeD2jR4/Opz/96XziE5/YkfXwOgYPGVKR4y4TBAEAeJvKChKtra1b\nPd68eXMeeuih9O3btyJFAQAAXVtZQeKss87aZltdXV0++9nP7vCCAACArq+sIHHLLbds9bhXr17t\naz4AAADdT1lBYuDAgZWuAwAA2Im8aZD46le/+qYvLpVKr3v7VgAAYNf2pkHihBNOeN3tjY2Nuf/+\n+7Np06aKFAUAAHRtbxok/vNic83NzfnXf/3X/OIXv8jxxx+f008/vaLFAQAAXVNZcyTWr1+fe+65\nJw888ECOOeaY/NM//VP22muvStcGAAB0UW8aJDZv3pyf/vSnuffee3PYYYflH//xH7Pvvvt2VG0A\nAEAX9aZB4sILL0xra2s+/OEP56CDDsrq1auzevXqrfY54ogjKlogAADQ9bxpkOjZs2eS5Gc/+9nr\nPl8qlbZZYwIAANj1vWmQmDFjRkfVAQAA7ESqOrsAAABg5yNIAAAAhQkSAABAYYIEAABQmCABAAAU\nJkgAAACFCRIAAEBhggQAAFCYIAEAABQmSAAAAIUJEgAAQGGCBAAAUJggAQAAFCZIAAAAhQkSAABA\nYYIEAABQmCABAAAUJkgAAACFCRIAAEBhggQAAFCYIAEAABQmSAAAAIUJEgAAQGGCBAAAUJggAQAA\nFCZIAAAAhQkSAABAYYIEAABQmCABAAAUJkgAAACFCRIAAEBhggQAAFCYIAEAABQmSAAAAIUJEgAA\nQGGCBAAAUJggAQAAFFbT2QXsSkpfqcxx2yp0XAAAeLv0SAAAAIUJEgAAQGGCBAAAUJggAQAAFCZI\nAAAAhQkSAABAYYIEAABQmCABAAAUJkgAAACFCRIAAEBhggQAAFCYIAEAABQmSAAAAIUJEgAAQGGC\nBAAAUJggAQAAFCZIAAAAhQkSAABAYYIEAABQmCABAAAUJkgAAACFCRIAAEBhNR3xJt/85jezaNGi\nDBgwIFOmTEmSrF27NlOnTs1LL72UgQMH5rLLLku/fv3S1taWmTNnZvHixenVq1cmTJiQAw88sCPK\nBAAAytQhPRKjR4/OVVddtdW2WbNm5cgjj8z06dNz5JFHZtasWUmSxYsXZ/ny5Zk+fXouuOCC3Hrr\nrR1RIgAAUECHBInDDjss/fr122rbggULMmrUqCTJqFGjsmDBgiTJwoULc+KJJ6ZUKmXo0KFZt25d\nmpqaOqJMAACgTB0ytOn1rF69OrW1tUmS2trarFmzJknS2NiYhoaG9v3q6+vT2NjYvu9fmjNnTubM\nmZMkmTx58lav4635fu14NTU1vq/dmOuPNoA2QHdqA50WJN5IW1vbNttKpdLr7jt27NiMHTu2/fHK\nlSsrVteuyPdrx2toaPB97cZcf7QBtAF29jYwePDgsvfttLs2DRgwoH3IUlNTU3bfffckr/ZA/OU3\nf9WqVa/bGwEAAHSeTgsSw4cPz7x585Ik8+bNy4gRI9q3P/TQQ2lra8szzzyTPn36CBIAANDFdMjQ\npmnTpuU3v/lNmpub87nPfS5nnHFGxo0bl6lTp2bu3LlpaGjI5ZdfniQ5+uijs2jRolx88cXp2bNn\nJkyY0BElAgAABXRIkLj00ktfd/vVV1+9zbZSqZTzzz+/0iUBAADbwcrWAABAYYIEAABQmCABAAAU\nJkgAAACFCRIAAEBhXW5la7ZV+kpljvtCZQ4LAEA3oEcCAAAoTJAAAAAKEyQAAIDCBAkAAKAwQQIA\nAChMkAAAAAoTJAAAgMIECQAAoDBBAgAAKEyQAAAAChMkAACAwgQJAACgMEECAAAoTJAAAAAKEyQA\nAIDCBAkAAKAwQQIAAChMkAAAAAoTJAAAgMIECQAAoDBBAgAAKEyQAAAAChMkAACAwgQJAACgMEEC\nAAAoTJAAAAAKEyQAAIDCBAkAAKAwQQIAAChMkAAAAAoTJAAAgMIECQAAoLCazi4AyjV4yJCKHHfZ\nCy9U5LgAALsyPRIAAEBheiS6sUr9hR8AgF2fHgkAAKAwQQIAAChMkAAAAAoTJAAAgMIECQAAoDBB\nAgAAKEyQAAAAChMkAACAwgQJAACgMEECAAAoTJAAAAAKq+nsAtj1lL5SmeO2Vei4AAAUp0cCAAAo\nTJAAAAAKM7SJnUalhky9UJnDAgDs0vRIAAAAhQkSAABAYYIEAABQmCABAAAUJkgAAACFCRIAAEBh\nggQAAFCYIAEAABQmSAAAAIUJEgAAQGE1nV0Anaf0lc6uAACAnZUgQbc3eMiQHXu8//f/ZS+8sEOP\nCwDQlQgSdHuV6pkRIwCAXZkgARWyo3s6XlOx4PMZ0QcAKJ8gASSpXPAxxAsAdk3u2gQAABSmRwIq\nxF2xAIBdmSABJDHpnI5hCB3ArkOQAOgAlfoAXSmV+mAusALsOrpskHjssccyc+bMtLa2ZsyYMRk3\nblxnlwTwtu1sQ918MAd4c0O+U5k/EO1Md1HskkGitbU1t912W770pS+lvr4+V155ZYYPH5599tmn\ns0sDCvKDdudUsR6Ur1TmsAB0vC4ZJJYuXZq99tore+65Z5Lk+OOPz4IFCwQJgA6ys/WgANDxumSQ\naGxsTH19ffvj+vr6PPvss9vsN2fOnMyZMydJMnny5AwePLjDanw9bZPaOvX9gc73Rj+H/HzoPjr7\ndxGdTxvoHvxc76LrSLS1bXthSqXSNtvGjh2byZMnZ/LkyR1R1luaOHFiZ5dAJ9MGujfXH20AbYDu\n1Aa6ZJCor6/PqlWr2h+vWrUqtbW1nVgRAADwl7pkkDjooIPy5z//OStWrEhLS0seeeSRDB8+vLPL\nAgAA/p/qr3zlK1/p7CL+s6qqquy11165+eabM3v27JxwwgkZOXJkZ5dVlgMPPLCzS6CTaQPdm+uP\nNoA2QHdpA6W215uQAAAA8Ca65NAmAACgaxMkAACAwrrkOhI7o8ceeywzZ85Ma2trxowZk3HjxnV2\nSexg3/zmN7No0aIMGDAgU6ZMSZKsXbs2U6dOzUsvvZSBAwfmsssuS79+/dLW1paZM2dm8eLF6dWr\nVyZMmNBtxkvuylauXJkZM2bk5ZdfTqlUytixY3PqqadqB93I5s2bM2nSpLS0tGTLli0ZOXJkzjjj\njKxYsSLTpk3L2rVrc8ABB+Siiy5KTU1NXnnlldxyyy157rnn0r9//1x66aUZNGhQZ58G26m1tTUT\nJ05MXV1dJk6c6Pp3MxdeeGF69+6dqqqqVFdXZ/Lkyd3294AeiR2gtbU1t912W6666qpMnTo1Dz/8\ncP70pz91dlnsYKNHj85VV1211bZZs2blyCOPzPTp03PkkUdm1qxZSZLFixdn+fLlmT59ei644ILc\neuutnVEyO1h1dXU+8YlPZOrUqbn22mvzwAMP5E9/+pN20I306NEjkyZNyg033JDrr78+jz32WJ55\n5pncddddOe200zJ9+vT07ds3c+fOTZLMnTs3ffv2zc0335zTTjst3//+9zv5DNgR7rvvvgwZMqT9\nsevf/bz2c+C1tcy66+8BQWIHWLp0afbaa6/sueeeqampyfHHH58FCxZ0dlnsYIcddlj69eu31bYF\nCxZk1KhRSZJRo0a1X/eFCxfmxBNPTKlUytChQ7Nu3bo0NTV1eM3sWLW1te1/Sdptt90yZMiQNDY2\nagfdSKlUSu/evZMkW7ZsyZYtW1IqlfLUU0+1311w9OjRW7WB0aNHJ0lGjhyZJUuWvO6iq+w8Vq1a\nlUWLFmXMmDFJXl1E1/Wnu/4eECR2gMbGxtTX17c/rq+vT2NjYydWREdZvXp1+2KJtbW1WbNmTZJX\n20RDQ0P7ftrErmfFihV5/vnnc/DBB2sH3Uxra2uuuOKKnH/++TnyyCOz5557pk+fPqmurk6S1NXV\ntV/nv/z9UF1dnT59+qS5ubnTamf73XHHHTn33HNTKpWSJM3Nza5/N3Tttdfmi1/8YubMmZOk+34e\nMEdiB3i9vy689gOG7kmb2LVt3LgxU6ZMyfjx49OnT5833E872DVVVVXlhhtuyLp163LjjTfmhRde\neMN9tYFdy6OPPpoBAwbkwAMPzFNPPfWW+7v+u6avfe1rqaury+rVq3PNNddk8ODBb7jvrt4GBIkd\noL6+PqtWrWp/vGrVqvZUyq5twIABaWpqSm1tbZqamrL77rsnebVNrFy5sn0/bWLX0dLSkilTpuSE\nE07Icccdl0Q76K769u2bww47LM8++2zWr1+fLVu2pLq6Oo2Njamrq0vy/38/1NfXZ8uWLVm/fv02\nQyTZefzud7/LwoULs3jx4mzevDkbNmzIHXfc4fp3M69d3wEDBmTEiBFZunRpt/09YGjTDnDQQQfl\nz3/+c1asWJGWlpY88sgjGT58eGeXRQcYPnx45s2blySZN29eRowY0b79oYceSltbW5555pn06dNn\nl/rB0V21tbXl29/+doYMGZIPfvCD7du1g+5jzZo1WbduXZJX7+D05JNPZsiQITn88MMzf/78JMmD\nDz7Y/jtg2LBhefDBB5Mk8+fPz+GHH75L/TWyuzn77LPz7W9/OzNmzMill16aI444IhdffLHr341s\n3LgxGzZsaP/6iSeeyH777ddtfw9Y2XoHWbRoUb773e+mtbU173vf+/Kxj32ss0tiB5s2bVp+85vf\npLm5OQMGDMgZZ5yRESNGZOrUqVm5cmUaGhpy+eWXt9/u7bbbbsvjjz+enj17ZsKECTnooIM6+xTY\nTk8//XSuvvrq7Lfffu0fBs4666wccsgh2kE38e///u+ZMWNGWltb09bWlne/+905/fTT8+KLL25z\n+88ePXpk8+bNueWWW/L888+nX79+ufTSS7Pnnnt29mmwAzz11FP5yU9+kokTJ7r+3ciLL76YG2+8\nMcmrN1x473vfm4997GNpbm7ulr8HBAkAAKAwQ5sAAIDCBAkAAKAwQQIAAChMkAAAAAoTJAAAgMIE\nCQAAoDArWwPwtl144YV5+eWXU1X1//8uddNNN7Wv/ArArkuQAGC7fPGLX8xRRx31tl/f2tq6VRAB\nYOcgSACwQ7W2tmbq1Kl5+umn88orr+Qd73hHzj///Oyzzz5JkunTp6dPnz558cUX8/TTT2fixIk5\n5JBD8i//8i+ZP39+Wlpactxxx+WTn/xkevbs2clnA8Ab8ScgAHa4YcOGZfr06fnv//2/Z999980t\nt9yy1fMPP/xwPv7xj+e73/1uhg4dmu9973tZsWJFbrjhhtx000156aWXcvfdd3dS9QCUQ5AAYLvc\ncMMNGT9+fMaPH5/rr78+VVVVGT16dHbbbbf07NkzH//4x/Pcc89l48aN7a8ZMWJEhg4dmqqqqlRX\nV2fu3LkZP358+vXrlz59+mTcuHF55JFHOvGsAHgrhjYBsF2uuOKKreZItLa25n/8j/+R+fPnp7m5\nOaVSKUnS3Nyc3r17J0kaGhra93/55Zfzyiuv5Iorrmjf1tbW1kHVA/B2CRIA7FDz5s3L4sWLc/XV\nV2fgwIFpbm7O+eef/4bhYI899khNTU2mTZuWPfbYo4OrBeDtMrQJgB1qw4YNqampSf/+/bNp06b8\n4Ac/eNP9q6qqctJJJ+WOO+7ImjVr0tbWllWrVuXxxx/voIoBeDsECQB2qPe9732pra3NZz/72fzd\n3/1dhg4d+pav+eQnP5mBAwfmyiuvzPjx43PNNdfkz3/+cwdUC8DbVWozEBUAAChIjwQAAFCYIAEA\nABQmSAAAAIUJEgAAQGGCBAAAUJggAQAAFCZIAAAAhQkSAABAYf8Xg/1hzOYvSzQAAAAASUVORK5C\nYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8c356195f8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "figure = plt.figure(figsize=(13,8))\n",
    "plt.hist([data[data['Survived']==1]['Fare'],data[data['Survived']==0]['Fare']], stacked=True, color = ['g','r'],\n",
    "         bins = 30,label = ['Survived','Dead'])\n",
    "plt.xlabel('Fare')\n",
    "plt.ylabel('Number of passengers')\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "_cell_guid": "e3425ad1-0955-4257-80e1-4c7cf475ffa1",
    "_uuid": "1515ee5369a6871c9bc3ec5ad7e7019d7a4a5d3c"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f8c35473668>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAxIAAAHmCAYAAADnWLjtAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMS4wLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvpW3flQAAIABJREFUeJzs3X94k/Wh//9X2tCU0hbSBnCwAxNR\nGYiODzBRERDR6Pwxz8HLMyc63AwbOAR0W7m+82z7uk3QoSiC2/m0TvBskznPvkycC5PDRHcmRxB2\nFJj8mDK3MX60TWlaaErTfP+oDQ0NzX2TO3fupM/HdXld9iY/3nnnTvJ+ve/3D1csFosJAAAAAEwo\nyHYBAAAAAOQeggQAAAAA0wgSAAAAAEwjSAAAAAAwjSABAAAAwDSCBAAAAADTCBIAAAAATCNIAAAA\nADCNIAEAAADANIIEAAAAANPc2S6AlQ4ePGj7c/p8PtXW1tr+vPmGerQOdWkd6tI61KV1qEvrUJfW\noS6t4YR6HDJkiOHbckUCAAAAgGkECQAAAACmESQAAAAAmEaQAAAAAGAaQQIAAACAaXm1ahMAAACs\nE41G1dLSIklyuVxnvN3hw4cViUTsKlbeymQ9xmIxSVJxcbEKCwsteUyCBAAAALqJRqM6ceKE+vXr\n12OIkCS3221Z47Q3y3Q9xmIxNTc3q2/fvpY8D0ObAAAA0E1LS4uhEIHc4XK51K9fv/hVpnQRJAAA\nAJAUISL/WPmeEiQAAADQDSEif1n13hIkAAAAAJhGkAAAAABgGkECAAAAyIC//vWvGjp0qF599VVb\nnu/VV1/V0KFD9de//tWW52P5VwAAACADBg0apJdeekkjR47MdlEygiABAAAAmHDixAn17ds35e08\nHo/Gjx9vQ4myg6FNAJCjlry1RKNWj9K5z5yrUatHaenWpQn/HjwQ1Mz1MzX9xemauX6mNvxlQ5ZK\nCgDZs2fPHt1xxx0aM2aMRo4cqalTp2r16tWSpEsvvVQPPfRQwu1//vOfa+jQoWpubpYk/eEPf9DQ\noUP12muvafbs2Tr//PP14IMPaubMmfryl7/c7fkeeughTZw4UbFYrNvQpgULFuiGG27odp9nn31W\n5513Xvw529vbtXLlSl1xxRU699xzNXnyZL3wwgsJ94nFYnrsscd08cUX64ILLtB9992npqamtOvL\nDK5IAEAOWvLWEq3631WKKSZJam1v1co/rpQkLZ64WMEDQVW9UaXaltr4ffY37JemSP7h/qyUGUDv\nFTwQVPW71QpFQvJ6vJpz8RzbvovuvvtunXfeeVqxYoWKior05z//+awa3A888ID+9V//Vffcc488\nHo92796thx56SMePH1dJSYmkjsb9yy+/rJtuuinpEquf/exndeedd+ovf/mLhg8fHj++fv16TZ8+\nXf369VNbW5sefPBB/eIXv9CiRYt00UUX6Y033tADDzwgr9era665RpL0zDPPaPny5Zo/f74uvfRS\nvfLKK/re9753lrV0dggSAJCD1vxpTTxEdIopptW7V2vxxMWq2VmTECIkqbalVtXvVhMkANgqmx0b\n9fX1+stf/qJnnnlGn/zkJyVJV1555Vk91o033qhvfOMb8b9HjBihf/u3f9Orr76qz372s5Kkt99+\nW3//+9/jf59uypQp8nq9Wr9+vb761a9Kkv7xj3/orbfe0o9+9CNJ0gcffKDnnntOjz/+uG677bb4\n/Q4fPqzly5frmmuuUTQa1dNPP61Zs2apqqpKkjRt2jR97nOf06FDh87q9Z0NhjYBQA6KtEV6PF7f\nUp/030MtoYyVCQCS6aljI9MGDBigIUOGaPHixfrVr36l2tra1Hc6g6uvvjrh78rKSl1xxRV66aWX\n4sdeeuklfeITn9All1yS9DHcbrc+85nPJNzn5ZdfVklJSfzxf//736ugoEDXX3+92tra4v9NnjxZ\nu3btUjQa1cGDB3X48GH5/YlB7Prrrz/r13c2CBIAkIM8bk+PxyuKK5L+u7fYm7EyAUAy2ezYKCgo\n0PPPP69BgwbpgQce0Kc+9Sn98z//s3bu3Gn6sQYOHNjt2Gc/+1n97ne/UzgcVnt7u37961/rpptu\n6vFxbr75Zu3atUt//vOfJXWEj2uvvTY+ebu+vl7RaFSjRo3S8OHD4/8tWrRIbW1tOnz4sI4cOSJJ\n8vl8CY99+t+ZRpAAgBw0e/RsuZQ4/tYll2aPni1JCowNyFd82g9MsU+BsQG7iggAkrLfsTFy5EhV\nV1frT3/6k9auXatIJKK77rpL7e3t8ng8OnnyZMLtGxoakj5OsjkP1113nWKxmDZs2KC33npLhw4d\n0s0339xjeS6//PL4srB/+9vftGPHjoT7DBgwQG63Wy+//LJeeeWVbv/5fD4NGjRIkrpdYUnnisvZ\n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\n+f/iOyFMEZ3YDgAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8c35678710>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(13,8))\n",
    "ax = plt.subplot()\n",
    "ax.scatter(data[data['Survived']==1]['Age'],data[data['Survived']==1]['Fare'],c='green',s=40)\n",
    "ax.scatter(data[data['Survived']==0]['Age'],data[data['Survived']==0]['Fare'],c='red',s=40)\n",
    "ax.set_xlabel('Age')\n",
    "ax.set_ylabel('Fare')\n",
    "ax.legend(('survived','dead'),scatterpoints=1,loc='upper right',fontsize=15,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "_cell_guid": "7ba78416-5893-4220-9b6f-fbaf72f0e7bb",
    "_uuid": "fc91ee3126bbb2b27569c5f8cfc09eba4c2f96e4"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f8c3570a7b8>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nSCwAAABFYgEAACgSCwAAQJFYAAAAisQCAABQJBYAAIAisQAAABSJBQAAoEgsAAAARWIBAAAoEgsA\nAECRWAAAAIrEAgAAUCQWAACAIrEAAAAUiQUAAKBILAAAAEViAQAAKBILAABAkVgAAACKGqu1oSee\neCLXXntt/vjHP6auri4f/vCH097enmXLlqWvry+TJk3KokWLMnbs2GqNBAAAvICqxcINN9yQo446\nKv/8z/+cwcHBbN++Pd/61rdyxBFHZMGCBenq6kpXV1cWLlxYrZEAAIAXUJXLkJ588sn8+te/zskn\nn5wkaWxszJgxY9Lb25t58+YlSebNm5fe3t5qjAMAAFSgKmcWNmzYkHHjxuXqq6/O73//+0yfPj1n\nnnlmBgYG0tLSkiRpaWnJli1bqjEOAABQgarEwtDQUH73u9/l7LPPziGHHJIbbrghXV1dFa/f3d2d\n7u7uJElnZ2fa2tpGa9RdzqO1HoBRtzftz+w9Ghsb7duwG3MM84yqxEJra2taW1tzyCGHJEnmzp2b\nrq6ujB8/Pps2bUpLS0s2bdqUcePGFdfv6OhIR0fHztf9/f3VGBuqwv7Mnqitrc2+Dbsxx/Cer729\nvaLPVeWehQkTJqS1tTXr169PkqxatSpTp07NrFmz0tPTkyTp6enJ7NmzqzEOAABQgao9Denss8/O\nlVdemcHBwey///4555xzMjIykmXLlmXFihVpa2vL+eefX61xAACAF1E3MjIyUushXqpnzlDsDYbe\nf2qtR2CUNVz3nVqPAK84lzDA7s0xvOfbpS5DAgAAdj9iAQAAKBILAABAkVgAAACKxAIAAFAkFgAA\ngCKxAAAAFIkFAACgSCwAAABFYgEAACgSCwAAQJFYAAAAisQCAABQJBYAAIAisQAAABSJBQAAoEgs\nAAAARWIBAAAoEgsAAECRWAAAAIrEAgAAUCQWAACAIrEAAAAUiQUAAKBILAAAAEViAQAAKBILAABA\nkVgAAACKxAIAAFAkFgAAgCKxAAAAFIkFAACgSCwAAABFYgEAACgSCwAAQFFjpR98+OGHs3Llymze\nvDnve9/7sm7dugwODubAAw8czfkAAIAaqejMwl133ZVLL700GzduzI9//OMkybZt23LTTTeN6nAA\nAEDtVHRm4ZZbbsnFF1+cgw46KHfddVeS5MADD8zatWtHczYAAKCGKjqzMDAw8JzLjerq6lJXVzcq\nQwEAALVXUSxMnz49t99++7OW3XnnnTn44INHZSgAAKD2KroM6ayzzsqnP/3prFixItu3b89ll12W\n9evX5+KLLx7t+QAAgBqpKBamTJmS5cuX55577snRRx+d1tbWHH300Wlqaqp4Qx/5yEfS1NSU+vr6\nNDQ0pLOzM1u3bs2yZcvS19eXSZMmZdGiRRk7duyf/csAAACvnBeNheHh4Xz0ox/NFVdckWOPPfZl\nbeySSy7JuHHjdr7u6urKEUcckQULFqSrqytdXV1ZuHDhy9oGAADwynjRexbq6+tTX1+fHTt2vOIb\n7+3tzbx585Ik8+bNS29v7yu+DQAA4M9T0WVI8+fPz/Lly/M3f/M3mThx4rOegjR58uSKN3bZZZcl\nSd761remo6MjAwMDaWlpSZK0tLRky5YtxfW6u7vT3d2dJOns7ExbW1vF29zdPVrrARh1e9P+zN6j\nsbHRvg27Mccwz6goFr785S8nSe6///7nvPeNb3yjog196lOfysSJEzMwMJBPf/rTaW9vr3jIjo6O\ndHR07Hzd399f8bqwq7M/sydqa2uzb8NuzDG856v07+IVxUKlQfBCJk6cmCQZP358Zs+enTVr1mT8\n+PHZtGlTWlpasmnTpmfdzwAAANRWRd+z8HJt27YtTz311M4/33///Xnta1+bWbNmpaenJ0nS09OT\n2bNnV2McAACgAhWdWRgaGsr3v//9/OpXv8rjjz/+rPc++clPvuj6AwMD+dznPrfzZx1//PE56qij\n8rrXvS7Lli3LihUr0tbWlvPPP//P+BUAAIDRUFEsfOUrX8kvf/nLdHR05Otf/3pOP/30/OAHP6j4\nUaqTJ0/O5Zdf/pzlr371q7NkyZKXNjEAAFAVFV2G9NOf/jQXXXRR5s+fn4aGhsyfPz+LFy/O6tWr\nR3s+AACgRiqKhR07dqS1tTVJsu+++2b79u2ZMmVK1q5dO5qzAQAANVTRZUhTpkzJQw89lIMPPjjT\np0/PN7/5zbzqVa/a+YQjAABgz1PRmYUzzzwz9fV/+ug//uM/5ne/+13uueeefOADHxjV4QAAgNp5\n3jMLX/3qV/Pe9743yZ8ed3r44YcnSf7iL/4in/jEJ6ozHQAAUDPPe2ahu7t7559LTzICAAD2bM97\nZuGggw7K0qVLM3Xq1Dz99NPP+y3O//AP/zBqwwEAALXzvLFw/vnnp7u7O319fRkZGcljjz1WzbkA\nAIAae95YGD9+fP7u7/4uSTI8PJxzzjmnakMBAAC1V9HTkIQCAADsfSqKBQAAYO8jFgAAgCKxAAAA\nFD3vDc7/28MPP5yVK1dm8+bNed/73pd169ZlcHAwBx544GjOBwAA1EhFZxbuuuuuXHrppdm4cWN+\n/OMfJ/nTtzrfdNNNozocAABQOxWdWbjlllty8cUX56CDDspdd92VJDnwwAOzdu3a0ZwNAACooYrO\nLAwMDDzncqO6urrU1dWNylAAAEDtVRQL06dPz+233/6sZXfeeWcOPvjgURkKAACovYouQzrrrLPy\n6U9/OitWrMj27dtz2WWXZf369bn44otHez4AAKBGKoqFKVOmZPny5bnnnnty9NFHp7W1NUcffXSa\nmppGez4AAKBGKn506n777Zdjjz12NGcBAAB2IRXFwpIlS4o3Mzc2Nqa1tTVz5szJrFmzXvHhAACA\n2qnoBufDDjssGzZsyKGHHpoTTjghhx56aPr6+vK6170u48ePzzXXXJNvf/vboz0rAABQRRWdWbj/\n/vvz8Y9/PFOnTt257IQTTshVV12Vz3zmMznmmGOyfPnyvPOd7xy1QQEAgOqq6MzCunXrMnny5Gct\nmzRpUtavX58kOfjggzMwMPDKTwcAANRMRbFw6KGH5uqrr84jjzySHTt25JFHHsm1116bGTNmJEn+\n8Ic/pKWlZVQHBQAAqquiy5D+6Z/+KV/60peyaNGiDA8Pp6GhIXPmzMk555zzpx/S2JiPfvSjozoo\nAABQXRXFwtixY/Oxj30sw8PD2bJlS8aNG5f6+v//pER7e/uoDQgAANRGxd+zkCTbt2/Pjh070tfX\nt3PZ/76XAQAA2DNUFAsPP/xwrrzyyvz+979/znvf+MY3XvGhAACA2qvoBucvfelLmTlzZr785S+n\nubk5N9xwQ9761rfmIx/5yGjPBwAA1EhFsfD73/8+Z5xxRsaMGZORkZE0Nzdn4cKFzioAAMAerKJY\n2GeffTI0NJQkefWrX53+/v6MjIxk69atozocAABQOxXdszBjxozcddddOfHEEzN37tx85jOfyT77\n7JOZM2eO9nwAAECNVBQL559//s4/n3766XnNa16Tbdu25c1vfvOoDQYAANTWi16GNDw8nEsvvTRP\nP/30n1aor8+b3/zmvO1tb0tTU9OoDwgAANTGi8ZCfX19NmzYkJGRkWrMAwAA7CIqusH5Xe96V667\n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\ny6ZNm9La2rrzC9saGxuzbdu2rFu3LgcffHCmTp06+r8kABURCwA8y+LFi3PkkUfufL1mzZqMHTt2\nZyi8kJ6entx6663p6+tLkmzbti2PP/54kmThwoW5+eabc9FFF2XMmDF5xzvekZNPPjmHH3543v72\nt+f6669Pf39/5syZk/e+971pbm4enV8QgIqJBQBeUGtra7Zu3ZonnnjiBS8P6uvryxe/+MUsWbIk\nr3/961NfX5/FixdnZGQkSTJhwoSdj1l94IEH8qlPfSqHHXZYDjjggMyfPz/z58/PwMBAli1blu98\n5zt597vfXZXfD4Dn52lIALyglpaWHHXUUfnSl76UrVu3ZnBwML/61a+e87nt27enrq4u48aNS5L8\n6Ec/yh//+Med799111157LHHkmRndNTX12fNmjV58MEHMzg4mP322y/77LNP6uv95wlgV+DMAgAv\n6txzz82NN96YRYsWZXBwMDNnznzOfQtTp07NO97xjnz84x9PfX193vzmN+cv//Ivd77/0EMP5cYb\nb8yTTz6ZCRMm5Kyzzsr++++fRx99NF/5ylfy6KOPZt99980b3vCGnHrqqdX+FQEoqBt55vwwAADA\n/8V5XgAAoEgsAAAARWIBAAAoEgsAAECRWAAAAIrEAgAAUCQWAACAIrEAAAAUiQUAAKDo/wOa6XBX\nQ12HdgAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8c3570ccf8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = plt.subplot()\n",
    "ax.set_ylabel('Average fare')\n",
    "data.groupby('Pclass').mean()['Fare'].plot(kind='bar',figsize=(13,8), ax = ax)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "_cell_guid": "a0208f8c-ee08-4604-93c1-7d68d11412f4",
    "_uuid": "62471e31c4151d34932e64be763b89107f30ff7e"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f8c353d7cc0>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nAPZBzY8E9PX15V/+5V/yhS98IYsWLcoTTzyR119/vdabAQAA9lHNI+CVV17J+973vhx66KFpamrK\nnDlzsnr16lpvBgAA2Ec1Px2ou7s7LS0t/Y9bWlry8ssv77Fee3t72tvbkyQLFy7MlClTaj0KA/l/\nHfWeAIBfxX4aGAY1PxJQrVb3WFapVPZY1tbWloULF2bhwoW1HgHq7rrrrqv3CAAMwr6aktU8Alpa\nWrJx48b+xxs3bsykSZNqvRkAAGAf1TwCpk+fnjfeeCPr16/P7t27s2rVqsycObPWmwEAAPZRza8J\naGxszKc//enceOON6evry2/91m/lAx/4QK03AyNaW1tbvUcAYBD21ZSsUh3oJH4AAOA9yycGAwBA\nYUQAAAAURgQAAEBhRAAAABSm5ncHgtJceumlA34g3s/927/92zBOA8BAHnnkkV/59+ecc84wTQIj\ngwiA/XTfffclSR544IEcdNBBOe2001KtVvP4449n586ddZ4OgCT9++POzs7893//d/9nGH33u9/N\n0UcfXc/RoC6cDgQ18r3vfS8f//jHc+CBB6a5uTm/8zu/k6effrreYwGQ5Pzzz8/555+frVu35qab\nbsqll16aSy+9NAsXLszGjRvrPR4MOxEANdLQ0JDHHnssfX196evry2OPPZaGBv+LAYwkXV1daWr6\nvxMhmpqasmHDhjpOBPXhw8KgRtavX5977703L730UpLkwx/+cC677LIccsghdZ4MgJ976KGH8uST\nT2bWrFmpVCr5zne+k5NOOim///u/X+/RYFiJAACgKK+++mp+8IMfJEmOPvroHHHEEXWeCIafCIAa\n6ezszJIlS7J58+bccsst+Z//+Z90dHTkU5/6VL1HA+AXbN68OW+99Vb/49bW1jpOA8PP3YGgRu68\n885ccsklueuuu5Ikv/Ebv5HFixeLAIARpKOjI/fdd182bdqUCRMmpKurK1OnTs0//MM/1Hs0GFau\nWoQa2bVrVz70oQ+9Y5kLgwFGlgceeCA33nhj3v/+9+eOO+7I3/zN3+TDH/5wvceCYec3FKiR8ePH\nZ926df0fHPbUU09l0qRJdZ4KgLdrbGzM+PHjU61W09fXl+OOOy4//OEP6z0WDDunA0GNfOYzn8ld\nd92VH/3oR/nTP/3THHLIIbnqqqvqPRYAbzN27Nj09PTkqKOOyuLFizNx4sQ0NjbWeywYdi4Mhhrp\n6+tLQ0NDenp6Uq1Wc+CBB9Z7JAB+QU9PT0aNGpVqtZrHHnssO3bsyKmnnprx48fXezQYViIAauSK\nK67IRz/60cyZMyfHHXdc/2lBAIwsGzZsyBtvvJHjjz8+P/nJT9LX1+eNG4ojAqBGdu3alY6Ojqxa\ntSqvvfZaPvaxj+Xkk0/OUUcdVe/RAPiZ9vb2/Nd//Ve2bduW2267LW+88UbuvvvufPGLX6z3aDCs\nXBgMNTJq1KjMmTMnf/7nf56bbropO3fuzIIFC+o9FgBv8+ijj+bLX/5y/zv/73//+7N58+Y6TwXD\nz4XBUEMvvvhiVq1alTVr1mT69Om55ppr6j0SAG9zwAEHpKnp/3796e3tdfomRRIBUCNXXnllDj/8\n8Jx00km5+OKLM2bMmHqPBMAvOOaYY/LQQw9l165dee655/Loo4/mxBNPrPdYMOxcEwA1smPHjjQ3\nN9d7DAB+hb6+vixbtizPPfdcqtVqPvKRj+TMM890NIDiiADYT9/61rfyyU9+Mv/6r/864N9/+tOf\nHuaJAPhVtmzZkiSZMGFCnSeB+nE6EOynqVOnJkmmTZtW50kA+GWq1WoefPDBPProo6lWq6lWq2lo\naMjv/d7v5Q/+4A/qPR4MO0cCoEZee+21HHHEEfUeA4ABPPLII1mzZk3/J7onyY9//OMsWbIkH/nI\nR3LOOefUeUIYXm4RCjVy33335eqrr843vvGN/O///m+9xwHgbVauXJnPfe5z/QGQJIceemjmz5+f\nlStX1nEyqA+nA0GNLFiwIG+++WZWrVqVu+66Kzt27MicOXPyqU99qt6jARSvt7d3wGsAJkyYkN7e\n3jpMBPXlSADU0EEHHZSzzjorl19+eQ4//PB885vfrPdIACTv+GyAd/N38F7lux5q5PXXX8+qVavy\n9NNPZ9y4cTn55JNz6aWX1nssAJL88Ic/zJ/8yZ/ssbxareatt96qw0RQXy4Mhhq5/vrrc/LJJ2f2\n7NmZPHlyvccBAPilHAmAGujr68uhhx6as846q96jAAAMyjUBUAMNDQ3ZunVrdu/eXe9RAAAG5XQg\nqJG77rorr732Wk488cSMGTOmf7l7TwMAI43TgaBGJk2alEmTJqVarWbnzp31HgcA4JdyJAAAAArj\nSADUyJe+9KUBly9YsGCYJwEA+NVEANTIJZdc0v/nXbt25emnn05jY2MdJwIAGJgIgBqZNm3aOx4f\nddRRjgIAACOSCIAa2bZtW/+f+/r68uqrr+bNN9+s40QAAAMTAVAjn//851OpVJIkjY2NOfjgg3PF\nFVfUeSoAgD25OxDsp1deeSWtra056KCDkiTLly/P008/nYMPPjgXXHBBxo0bV+cJAQDeyScGw366\n++6709T004NqL774Yv793/+68jNmAAAAwklEQVQ9c+fOTXNzc+688846TwcAsCcRAPupr6+v/93+\nVatW5cwzz8zs2bPzh3/4h1m3bl2dpwMA2JMIgP3U19eX3t7eJMnzzz+f44477h1/BwAw0rgwGPbT\nySefnBtuuCHjx4/PqFGjcvTRRydJ1q1bl+bm5jpPBwCwJxcGQw2sXbs2b775Zo4//viMGTMmSdLZ\n2Zmenp49Pj8AAKDeRAAAABTGNQEAAFAYEQAAAIURAQAAUBgRAAAAhREBAABQmP8PwC09VzIzRfEA\nAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8c355b87f0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "survived_embark = data[data['Survived']==1]['Embarked'].value_counts()\n",
    "dead_embark = data[data['Survived']==0]['Embarked'].value_counts()\n",
    "df = pd.DataFrame([survived_embark,dead_embark])\n",
    "df.index = ['Survived','Dead']\n",
    "df.plot(kind='bar',stacked=True, figsize=(13,8))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "_cell_guid": "a0da2cb5-a85c-4ff5-8355-27ce453310ca",
    "_uuid": "77af70d589110f3219df2c97a7e933e1c34b0271",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def status(feature):\n",
    "\n",
    "    print('Processing', feature, ': ok')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "_cell_guid": "14c36814-fe94-4c5b-b1a6-1653b20746e3",
    "_uuid": "97e0991c16e95d2138126c0d26abb2091c0c44c0",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def get_combined_data():\n",
    "    # reading train data\n",
    "    train = pd.read_csv('../input/train.csv')\n",
    "    \n",
    "    # reading test data\n",
    "    test = pd.read_csv('../input/test.csv')\n",
    "\n",
    "    # extracting and then removing the targets from the training data \n",
    "    targets = train.Survived\n",
    "    train.drop('Survived',1,inplace=True)\n",
    "    \n",
    "\n",
    "    # merging train data and test data for future feature engineering\n",
    "    combined = train.append(test)\n",
    "    combined.reset_index(inplace=True)\n",
    "    combined.drop('index',inplace=True,axis=1)\n",
    "    \n",
    "    return combined"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "_cell_guid": "515f6997-ae69-450e-8665-a03a3e7525cd",
    "_uuid": "1a695aad5e3ffc8a2f69c35651c56e992a5bf940",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "combined = get_combined_data()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "_cell_guid": "cb032b86-ab0e-44f9-a569-862c0bf39656",
    "_uuid": "f7bc844537bb786828383997d5d593502fd9a4ed"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1309, 11)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "_cell_guid": "be201499-b5c1-41b1-a31c-5034092202d8",
    "_uuid": "87a46712da841ae149d0c04789ed83c2ab8d6e12"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Pclass                                               Name  \\\n",
       "0            1       3                            Braund, Mr. Owen Harris   \n",
       "1            2       1  Cumings, Mrs. John Bradley (Florence Briggs Th...   \n",
       "2            3       3                             Heikkinen, Miss. Laina   \n",
       "3            4       1       Futrelle, Mrs. Jacques Heath (Lily May Peel)   \n",
       "4            5       3                           Allen, Mr. William Henry   \n",
       "\n",
       "      Sex   Age  SibSp  Parch            Ticket     Fare Cabin Embarked  \n",
       "0    male  22.0      1      0         A/5 21171   7.2500   NaN        S  \n",
       "1  female  38.0      1      0          PC 17599  71.2833   C85        C  \n",
       "2  female  26.0      0      0  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3  female  35.0      1      0            113803  53.1000  C123        S  \n",
       "4    male  35.0      0      0            373450   8.0500   NaN        S  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "_cell_guid": "f1efd587-6588-4757-9a22-7125bc942b19",
    "_uuid": "db52631280a44b2e382ae085ed7a7f3a8f7d3e73",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def get_titles():\n",
    "\n",
    "    global combined\n",
    "    \n",
    "    # we extract the title from each name\n",
    "    combined['Title'] = combined['Name'].map(lambda name:name.split(',')[1].split('.')[0].strip())\n",
    "    \n",
    "    # a map of more aggregated titles\n",
    "    Title_Dictionary = {\n",
    "                        \"Capt\":       \"Officer\",\n",
    "                        \"Col\":        \"Officer\",\n",
    "                        \"Major\":      \"Officer\",\n",
    "                        \"Jonkheer\":   \"Royalty\",\n",
    "                        \"Don\":        \"Royalty\",\n",
    "                        \"Sir\" :       \"Royalty\",\n",
    "                        \"Dr\":         \"Officer\",\n",
    "                        \"Rev\":        \"Officer\",\n",
    "                        \"the Countess\":\"Royalty\",\n",
    "                        \"Dona\":       \"Royalty\",\n",
    "                        \"Mme\":        \"Mrs\",\n",
    "                        \"Mlle\":       \"Miss\",\n",
    "                        \"Ms\":         \"Mrs\",\n",
    "                        \"Mr\" :        \"Mr\",\n",
    "                        \"Mrs\" :       \"Mrs\",\n",
    "                        \"Miss\" :      \"Miss\",\n",
    "                        \"Master\" :    \"Master\",\n",
    "                        \"Lady\" :      \"Royalty\"\n",
    "\n",
    "                        }\n",
    "    \n",
    "    # we map each title\n",
    "    combined['Title'] = combined.Title.map(Title_Dictionary)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "_cell_guid": "bc6305a2-557a-49b2-ade7-6cf42bc2cf6b",
    "_uuid": "357b66da3734345fabfc1f2a5440aadd65965b29",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "get_titles()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "_cell_guid": "6ea67c51-8117-4167-93de-73e3d41743f2",
    "_uuid": "ddef52d8b947879efb7324df6b8862524859885a"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>Title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "      <td>Mrs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "      <td>Miss</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "      <td>Mrs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Pclass                                               Name  \\\n",
       "0            1       3                            Braund, Mr. Owen Harris   \n",
       "1            2       1  Cumings, Mrs. John Bradley (Florence Briggs Th...   \n",
       "2            3       3                             Heikkinen, Miss. Laina   \n",
       "3            4       1       Futrelle, Mrs. Jacques Heath (Lily May Peel)   \n",
       "4            5       3                           Allen, Mr. William Henry   \n",
       "\n",
       "      Sex   Age  SibSp  Parch            Ticket     Fare Cabin Embarked Title  \n",
       "0    male  22.0      1      0         A/5 21171   7.2500   NaN        S    Mr  \n",
       "1  female  38.0      1      0          PC 17599  71.2833   C85        C   Mrs  \n",
       "2  female  26.0      0      0  STON/O2. 3101282   7.9250   NaN        S  Miss  \n",
       "3  female  35.0      1      0            113803  53.1000  C123        S   Mrs  \n",
       "4    male  35.0      0      0            373450   8.0500   NaN        S    Mr  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "_cell_guid": "d2fb5790-9ab5-4350-9358-60193e1824b3",
    "_uuid": "9b33c33fda1e29f7994adf5806e4b51d5449371a"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sex</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Title</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"8\" valign=\"top\">female</th>\n",
       "      <th rowspan=\"4\" valign=\"top\">1</th>\n",
       "      <th>Miss</th>\n",
       "      <td>529.5</td>\n",
       "      <td>30.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>99.9625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mrs</th>\n",
       "      <td>853.5</td>\n",
       "      <td>45.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>78.1125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Officer</th>\n",
       "      <td>797.0</td>\n",
       "      <td>49.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.9292</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Royalty</th>\n",
       "      <td>760.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>86.5000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">2</th>\n",
       "      <th>Miss</th>\n",
       "      <td>606.5</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.2500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mrs</th>\n",
       "      <td>533.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">3</th>\n",
       "      <th>Miss</th>\n",
       "      <td>603.5</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.0500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mrs</th>\n",
       "      <td>668.5</td>\n",
       "      <td>31.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.5000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"9\" valign=\"top\">male</th>\n",
       "      <th rowspan=\"4\" valign=\"top\">1</th>\n",
       "      <th>Master</th>\n",
       "      <td>803.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>134.5000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mr</th>\n",
       "      <td>634.0</td>\n",
       "      <td>41.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>47.1000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Officer</th>\n",
       "      <td>678.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>37.5500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Royalty</th>\n",
       "      <td>600.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>27.7208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">2</th>\n",
       "      <th>Master</th>\n",
       "      <td>550.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>26.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mr</th>\n",
       "      <td>723.5</td>\n",
       "      <td>30.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Officer</th>\n",
       "      <td>513.0</td>\n",
       "      <td>41.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">3</th>\n",
       "      <th>Master</th>\n",
       "      <td>789.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>22.3583</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mr</th>\n",
       "      <td>640.5</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.8958</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       PassengerId   Age  SibSp  Parch      Fare\n",
       "Sex    Pclass Title                                             \n",
       "female 1      Miss           529.5  30.0    0.0    0.0   99.9625\n",
       "              Mrs            853.5  45.0    1.0    0.0   78.1125\n",
       "              Officer        797.0  49.0    0.0    0.0   25.9292\n",
       "              Royalty        760.0  39.0    0.0    0.0   86.5000\n",
       "       2      Miss           606.5  20.0    0.0    0.0   20.2500\n",
       "              Mrs            533.0  30.0    1.0    0.0   26.0000\n",
       "       3      Miss           603.5  18.0    0.0    0.0    8.0500\n",
       "              Mrs            668.5  31.0    1.0    1.0   15.5000\n",
       "male   1      Master         803.0   6.0    1.0    2.0  134.5000\n",
       "              Mr             634.0  41.5    0.0    0.0   47.1000\n",
       "              Officer        678.0  52.0    0.0    0.0   37.5500\n",
       "              Royalty        600.0  40.0    0.0    0.0   27.7208\n",
       "       2      Master         550.0   2.0    1.0    1.0   26.0000\n",
       "              Mr             723.5  30.0    0.0    0.0   13.0000\n",
       "              Officer        513.0  41.5    0.0    0.0   13.0000\n",
       "       3      Master         789.0   6.0    3.0    1.0   22.3583\n",
       "              Mr             640.5  26.0    0.0    0.0    7.8958"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grouped = combined.groupby(['Sex','Pclass','Title'])\n",
    "grouped.median()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "_cell_guid": "19b3d75d-b202-4792-b83e-8ca7a2247d0c",
    "_uuid": "4c5fd4eccf52e4b90cc6c5a60ea93ec79cbb8e2e",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def process_age():\n",
    "    \n",
    "    global combined\n",
    "    \n",
    "    # a function that fills the missing values of the Age variable\n",
    "    \n",
    "    def fillAges(row):\n",
    "        if row['Sex']=='female' and row['Pclass'] == 1:\n",
    "            if row['Title'] == 'Miss':\n",
    "                return 30\n",
    "            elif row['Title'] == 'Mrs':\n",
    "                return 45\n",
    "            elif row['Title'] == 'Officer':\n",
    "                return 49\n",
    "            elif row['Title'] == 'Royalty':\n",
    "                return 39\n",
    "\n",
    "        elif row['Sex']=='female' and row['Pclass'] == 2:\n",
    "            if row['Title'] == 'Miss':\n",
    "                return 20\n",
    "            elif row['Title'] == 'Mrs':\n",
    "                return 30\n",
    "\n",
    "        elif row['Sex']=='female' and row['Pclass'] == 3:\n",
    "            if row['Title'] == 'Miss':\n",
    "                return 18\n",
    "            elif row['Title'] == 'Mrs':\n",
    "                return 31\n",
    "\n",
    "        elif row['Sex']=='male' and row['Pclass'] == 1:\n",
    "            if row['Title'] == 'Master':\n",
    "                return 6\n",
    "            elif row['Title'] == 'Mr':\n",
    "                return 41.5\n",
    "            elif row['Title'] == 'Officer':\n",
    "                return 52\n",
    "            elif row['Title'] == 'Royalty':\n",
    "                return 40\n",
    "\n",
    "        elif row['Sex']=='male' and row['Pclass'] == 2:\n",
    "            if row['Title'] == 'Master':\n",
    "                return 2\n",
    "            elif row['Title'] == 'Mr':\n",
    "                return 30\n",
    "            elif row['Title'] == 'Officer':\n",
    "                return 41.5\n",
    "\n",
    "        elif row['Sex']=='male' and row['Pclass'] == 3:\n",
    "            if row['Title'] == 'Master':\n",
    "                return 6\n",
    "            elif row['Title'] == 'Mr':\n",
    "                return 26\n",
    "    \n",
    "    combined.Age = combined.apply(lambda r : fillAges(r) if np.isnan(r['Age']) else r['Age'], axis=1)\n",
    "    \n",
    "    status('age')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "_cell_guid": "cd69bcc2-32e4-41db-9423-33679f157bee",
    "_uuid": "bb3dc288b974353710ab7b4f37a0df7d33afa588"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processing age : ok\n"
     ]
    }
   ],
   "source": [
    "process_age()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "_cell_guid": "01c4cfe1-c45a-4950-a596-90ce12c94156",
    "_uuid": "b17eddc41f7eb4929be8b008ec9a172a738ca8c5"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1309 entries, 0 to 1308\n",
      "Data columns (total 12 columns):\n",
      "PassengerId    1309 non-null int64\n",
      "Pclass         1309 non-null int64\n",
      "Name           1309 non-null object\n",
      "Sex            1309 non-null object\n",
      "Age            1309 non-null float64\n",
      "SibSp          1309 non-null int64\n",
      "Parch          1309 non-null int64\n",
      "Ticket         1309 non-null object\n",
      "Fare           1308 non-null float64\n",
      "Cabin          295 non-null object\n",
      "Embarked       1307 non-null object\n",
      "Title          1309 non-null object\n",
      "dtypes: float64(2), int64(4), object(6)\n",
      "memory usage: 122.8+ KB\n"
     ]
    }
   ],
   "source": [
    "combined.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "_cell_guid": "864f178b-a289-4073-bc99-a222b75d2e0b",
    "_uuid": "87dd34b7dd787041a1b9a10ab44ff3a4dc9a3339",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def process_names():\n",
    "    \n",
    "    global combined\n",
    "    # we clean the Name variable\n",
    "    combined.drop('Name',axis=1,inplace=True)\n",
    "    \n",
    "    # encoding in dummy variable\n",
    "    titles_dummies = pd.get_dummies(combined['Title'],prefix='Title')\n",
    "    combined = pd.concat([combined,titles_dummies],axis=1)\n",
    "    \n",
    "    # removing the title variable\n",
    "    combined.drop('Title',axis=1,inplace=True)\n",
    "    \n",
    "    status('names')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "_cell_guid": "21de9627-d437-4176-90e5-3c36044214d2",
    "_uuid": "d857d9403da34a7405fb73fbb69e8514c759fa98"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processing names : ok\n"
     ]
    }
   ],
   "source": [
    "process_names()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "_cell_guid": "54774a32-4b96-4692-a53e-ce9f617b4517",
    "_uuid": "2268d0dcce65cc042f0aea7a53496bb13296075f"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>Title_Master</th>\n",
       "      <th>Title_Miss</th>\n",
       "      <th>Title_Mr</th>\n",
       "      <th>Title_Mrs</th>\n",
       "      <th>Title_Officer</th>\n",
       "      <th>Title_Royalty</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Pclass     Sex   Age  SibSp  Parch            Ticket     Fare  \\\n",
       "0            1       3    male  22.0      1      0         A/5 21171   7.2500   \n",
       "1            2       1  female  38.0      1      0          PC 17599  71.2833   \n",
       "2            3       3  female  26.0      0      0  STON/O2. 3101282   7.9250   \n",
       "3            4       1  female  35.0      1      0            113803  53.1000   \n",
       "4            5       3    male  35.0      0      0            373450   8.0500   \n",
       "\n",
       "  Cabin Embarked  Title_Master  Title_Miss  Title_Mr  Title_Mrs  \\\n",
       "0   NaN        S             0           0         1          0   \n",
       "1   C85        C             0           0         0          1   \n",
       "2   NaN        S             0           1         0          0   \n",
       "3  C123        S             0           0         0          1   \n",
       "4   NaN        S             0           0         1          0   \n",
       "\n",
       "   Title_Officer  Title_Royalty  \n",
       "0              0              0  \n",
       "1              0              0  \n",
       "2              0              0  \n",
       "3              0              0  \n",
       "4              0              0  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "_cell_guid": "e5c37c0a-d756-450b-a3e0-845c618ccb3f",
    "_uuid": "3e0f66582ae340cbfd144b892cdca637d62ad481",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def process_fares():\n",
    "    \n",
    "    global combined\n",
    "    # there's one missing fare value - replacing it with the mean.\n",
    "    combined.Fare.fillna(combined.Fare.mean(),inplace=True)\n",
    "    \n",
    "    status('fare')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "_cell_guid": "b494fff5-8f43-4b54-81f1-33a0a9750634",
    "_uuid": "ea52afd7a5370bf16f05b060b68e992c960c3ccf"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processing fare : ok\n"
     ]
    }
   ],
   "source": [
    "process_fares()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "_cell_guid": "b91b28a6-bbbf-45e8-94fe-43c37550f27b",
    "_uuid": "40b591372ac15dfbe2806eafa389f885d5dcdece",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def process_embarked():\n",
    "    \n",
    "    global combined\n",
    "    # two missing embarked values - filling them with the most frequent one (S)\n",
    "    combined.Embarked.fillna('S',inplace=True)\n",
    "    \n",
    "    # dummy encoding \n",
    "    embarked_dummies = pd.get_dummies(combined['Embarked'],prefix='Embarked')\n",
    "    combined = pd.concat([combined,embarked_dummies],axis=1)\n",
    "    combined.drop('Embarked',axis=1,inplace=True)\n",
    "    \n",
    "    status('embarked')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "_cell_guid": "579534f1-0f4a-42d7-a7dc-5fca5873657a",
    "_uuid": "154e5eac8d0e3734805d19720256daae255fd71d"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processing embarked : ok\n"
     ]
    }
   ],
   "source": [
    "process_embarked()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "_cell_guid": "eb10423a-416a-4b04-b60f-168010b54e89",
    "_uuid": "feba01c9e4ed3c3ae543224d4c636c793c447f7e",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "\n",
    "def process_cabin():\n",
    "    \n",
    "    global combined\n",
    "    \n",
    "    # replacing missing cabins with U (for Uknown)\n",
    "    combined.Cabin.fillna('U',inplace=True)\n",
    "    \n",
    "    # mapping each Cabin value with the cabin letter\n",
    "    combined['Cabin'] = combined['Cabin'].map(lambda c : c[0])\n",
    "    \n",
    "    # dummy encoding ...\n",
    "    cabin_dummies = pd.get_dummies(combined['Cabin'],prefix='Cabin')\n",
    "    \n",
    "    combined = pd.concat([combined,cabin_dummies],axis=1)\n",
    "    \n",
    "    combined.drop('Cabin',axis=1,inplace=True)\n",
    "    \n",
    "    status('cabin')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "_cell_guid": "875e747f-9573-4c9b-ac9d-74f8ab948658",
    "_uuid": "7e856a88c8d3d27afb0e13536498d592172f530f"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processing cabin : ok\n"
     ]
    }
   ],
   "source": [
    "process_cabin()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "_cell_guid": "70bd3732-91b6-4381-a957-e10b2e933902",
    "_uuid": "bb12622d419d7d26f2be4ccb348993f9e49fa903"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1309 entries, 0 to 1308\n",
      "Data columns (total 26 columns):\n",
      "PassengerId      1309 non-null int64\n",
      "Pclass           1309 non-null int64\n",
      "Sex              1309 non-null object\n",
      "Age              1309 non-null float64\n",
      "SibSp            1309 non-null int64\n",
      "Parch            1309 non-null int64\n",
      "Ticket           1309 non-null object\n",
      "Fare             1309 non-null float64\n",
      "Title_Master     1309 non-null uint8\n",
      "Title_Miss       1309 non-null uint8\n",
      "Title_Mr         1309 non-null uint8\n",
      "Title_Mrs        1309 non-null uint8\n",
      "Title_Officer    1309 non-null uint8\n",
      "Title_Royalty    1309 non-null uint8\n",
      "Embarked_C       1309 non-null uint8\n",
      "Embarked_Q       1309 non-null uint8\n",
      "Embarked_S       1309 non-null uint8\n",
      "Cabin_A          1309 non-null uint8\n",
      "Cabin_B          1309 non-null uint8\n",
      "Cabin_C          1309 non-null uint8\n",
      "Cabin_D          1309 non-null uint8\n",
      "Cabin_E          1309 non-null uint8\n",
      "Cabin_F          1309 non-null uint8\n",
      "Cabin_G          1309 non-null uint8\n",
      "Cabin_T          1309 non-null uint8\n",
      "Cabin_U          1309 non-null uint8\n",
      "dtypes: float64(2), int64(4), object(2), uint8(18)\n",
      "memory usage: 104.9+ KB\n"
     ]
    }
   ],
   "source": [
    "combined.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "_cell_guid": "94fa2a6e-00ed-4e46-a1c8-3fbe5800abfb",
    "_uuid": "0de1dd0c89c7424117468a171931524b9f1fab43"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Title_Master</th>\n",
       "      <th>Title_Miss</th>\n",
       "      <th>Title_Mr</th>\n",
       "      <th>Title_Mrs</th>\n",
       "      <th>Title_Officer</th>\n",
       "      <th>Title_Royalty</th>\n",
       "      <th>Embarked_C</th>\n",
       "      <th>Embarked_Q</th>\n",
       "      <th>Embarked_S</th>\n",
       "      <th>Cabin_A</th>\n",
       "      <th>Cabin_B</th>\n",
       "      <th>Cabin_C</th>\n",
       "      <th>Cabin_D</th>\n",
       "      <th>Cabin_E</th>\n",
       "      <th>Cabin_F</th>\n",
       "      <th>Cabin_G</th>\n",
       "      <th>Cabin_T</th>\n",
       "      <th>Cabin_U</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Pclass     Sex   Age  SibSp  Parch            Ticket     Fare  \\\n",
       "0            1       3    male  22.0      1      0         A/5 21171   7.2500   \n",
       "1            2       1  female  38.0      1      0          PC 17599  71.2833   \n",
       "2            3       3  female  26.0      0      0  STON/O2. 3101282   7.9250   \n",
       "3            4       1  female  35.0      1      0            113803  53.1000   \n",
       "4            5       3    male  35.0      0      0            373450   8.0500   \n",
       "\n",
       "   Title_Master  Title_Miss  Title_Mr  Title_Mrs  Title_Officer  \\\n",
       "0             0           0         1          0              0   \n",
       "1             0           0         0          1              0   \n",
       "2             0           1         0          0              0   \n",
       "3             0           0         0          1              0   \n",
       "4             0           0         1          0              0   \n",
       "\n",
       "   Title_Royalty  Embarked_C  Embarked_Q  Embarked_S  Cabin_A  Cabin_B  \\\n",
       "0              0           0           0           1        0        0   \n",
       "1              0           1           0           0        0        0   \n",
       "2              0           0           0           1        0        0   \n",
       "3              0           0           0           1        0        0   \n",
       "4              0           0           0           1        0        0   \n",
       "\n",
       "   Cabin_C  Cabin_D  Cabin_E  Cabin_F  Cabin_G  Cabin_T  Cabin_U  \n",
       "0        0        0        0        0        0        0        1  \n",
       "1        1        0        0        0        0        0        0  \n",
       "2        0        0        0        0        0        0        1  \n",
       "3        1        0        0        0        0        0        0  \n",
       "4        0        0        0        0        0        0        1  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "_cell_guid": "477a67f3-7215-41e8-9852-49ce9cb45fde",
    "_uuid": "9e390ea2aeb5a7926da66ab52bcfcb5b95d9a46e",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def process_sex():\n",
    "    \n",
    "    global combined\n",
    "    # mapping string values to numerical one \n",
    "    combined['Sex'] = combined['Sex'].map({'male':1,'female':0})\n",
    "    \n",
    "    status('sex')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "_cell_guid": "f5246342-4412-48c0-9285-a46bf45ebf80",
    "_uuid": "ed7e4f13c7f2c1327abd3ffdac4ca26c298b0706"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processing sex : ok\n"
     ]
    }
   ],
   "source": [
    "process_sex()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "_cell_guid": "8ebe4302-1553-47af-81bc-0b64da59ad74",
    "_uuid": "b8c97e1e64f75a33c9ca5434495d02831db0e2e1",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def process_pclass():\n",
    "    \n",
    "    global combined\n",
    "    # encoding into 3 categories:\n",
    "    pclass_dummies = pd.get_dummies(combined['Pclass'],prefix=\"Pclass\")\n",
    "    \n",
    "    # adding dummy variables\n",
    "    combined = pd.concat([combined,pclass_dummies],axis=1)\n",
    "    \n",
    "    # removing \"Pclass\"\n",
    "    \n",
    "    combined.drop('Pclass',axis=1,inplace=True)\n",
    "    \n",
    "    status('pclass')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "_cell_guid": "d4a8f010-1222-49e1-aa77-64b0b5be26f8",
    "_uuid": "c94768518ed4399f98cb053e91824573042f8bae"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processing pclass : ok\n"
     ]
    }
   ],
   "source": [
    "process_pclass()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "_cell_guid": "952cdeb3-3b63-4a6d-ae82-04df1f64f5f9",
    "_uuid": "8b0ccec3df7d57ae891cd6ab78f8921db69b7fc7",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def process_ticket():\n",
    "    \n",
    "    global combined\n",
    "    \n",
    "    # a function that extracts each prefix of the ticket, returns 'XXX' if no prefix (i.e the ticket is a digit)\n",
    "    def cleanTicket(ticket):\n",
    "        ticket = ticket.replace('.','')\n",
    "        ticket = ticket.replace('/','')\n",
    "        ticket = ticket.split()\n",
    "        ticket = map(lambda t : t.strip() , ticket)\n",
    "        ticket = list(filter(lambda t : not t.isdigit(), ticket))\n",
    "        if len(ticket) > 0:\n",
    "            return ticket[0]\n",
    "        else: \n",
    "            return 'XXX'\n",
    "    \n",
    "\n",
    "    # Extracting dummy variables from tickets:\n",
    "\n",
    "    combined['Ticket'] = combined['Ticket'].map(cleanTicket)\n",
    "    tickets_dummies = pd.get_dummies(combined['Ticket'],prefix='Ticket')\n",
    "    combined = pd.concat([combined, tickets_dummies],axis=1)\n",
    "    combined.drop('Ticket',inplace=True,axis=1)\n",
    "\n",
    "    status('ticket')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "_cell_guid": "e8cc2911-5c55-4a4a-b8ea-0d7b565fd6d9",
    "_uuid": "68d103094e724ecdd67ca3a92dac64e014b6c0bc"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processing ticket : ok\n"
     ]
    }
   ],
   "source": [
    "process_ticket()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "_cell_guid": "eea1552a-00ca-4d9c-b745-cde5407c16c5",
    "_uuid": "108ee9c530ddea5fd2136563d63a1b45121f235c",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def process_family():\n",
    "    \n",
    "    global combined\n",
    "    # introducing a new feature : the size of families (including the passenger)\n",
    "    combined['FamilySize'] = combined['Parch'] + combined['SibSp'] + 1\n",
    "    \n",
    "    # introducing other features based on the family size\n",
    "    combined['Singleton'] = combined['FamilySize'].map(lambda s : 1 if s == 1 else 0)\n",
    "    combined['SmallFamily'] = combined['FamilySize'].map(lambda s : 1 if 2<=s<=4 else 0)\n",
    "    combined['LargeFamily'] = combined['FamilySize'].map(lambda s : 1 if 5<=s else 0)\n",
    "    \n",
    "    status('family')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "_cell_guid": "3cd8fc3a-70fb-4c28-909b-8bdd0460bbe9",
    "_uuid": "23ec52cf1f6a3141174ce89e38445fef7116b3d1"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processing family : ok\n"
     ]
    }
   ],
   "source": [
    "process_family()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "_cell_guid": "8f1e451a-1a96-4cfc-92bc-85e6b235ca63",
    "_uuid": "b2e09da5bcde264b89d5c53578035fb68785ab14"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1309, 68)"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "_cell_guid": "b69edb54-8e6d-4b76-8946-91b141ee6d6b",
    "_uuid": "00504de4b59246896ce3002aced8d102e9f6d544"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Title_Master</th>\n",
       "      <th>Title_Miss</th>\n",
       "      <th>Title_Mr</th>\n",
       "      <th>Title_Mrs</th>\n",
       "      <th>Title_Officer</th>\n",
       "      <th>Title_Royalty</th>\n",
       "      <th>Embarked_C</th>\n",
       "      <th>Embarked_Q</th>\n",
       "      <th>Embarked_S</th>\n",
       "      <th>Cabin_A</th>\n",
       "      <th>Cabin_B</th>\n",
       "      <th>Cabin_C</th>\n",
       "      <th>Cabin_D</th>\n",
       "      <th>Cabin_E</th>\n",
       "      <th>Cabin_F</th>\n",
       "      <th>Cabin_G</th>\n",
       "      <th>Cabin_T</th>\n",
       "      <th>Cabin_U</th>\n",
       "      <th>Pclass_1</th>\n",
       "      <th>Pclass_2</th>\n",
       "      <th>Pclass_3</th>\n",
       "      <th>Ticket_A</th>\n",
       "      <th>Ticket_A4</th>\n",
       "      <th>Ticket_A5</th>\n",
       "      <th>Ticket_AQ3</th>\n",
       "      <th>Ticket_AQ4</th>\n",
       "      <th>Ticket_AS</th>\n",
       "      <th>Ticket_C</th>\n",
       "      <th>Ticket_CA</th>\n",
       "      <th>Ticket_CASOTON</th>\n",
       "      <th>Ticket_FC</th>\n",
       "      <th>Ticket_FCC</th>\n",
       "      <th>Ticket_Fa</th>\n",
       "      <th>Ticket_LINE</th>\n",
       "      <th>Ticket_LP</th>\n",
       "      <th>Ticket_PC</th>\n",
       "      <th>Ticket_PP</th>\n",
       "      <th>Ticket_PPP</th>\n",
       "      <th>Ticket_SC</th>\n",
       "      <th>Ticket_SCA3</th>\n",
       "      <th>Ticket_SCA4</th>\n",
       "      <th>Ticket_SCAH</th>\n",
       "      <th>Ticket_SCOW</th>\n",
       "      <th>Ticket_SCPARIS</th>\n",
       "      <th>Ticket_SCParis</th>\n",
       "      <th>Ticket_SOC</th>\n",
       "      <th>Ticket_SOP</th>\n",
       "      <th>Ticket_SOPP</th>\n",
       "      <th>Ticket_SOTONO2</th>\n",
       "      <th>Ticket_SOTONOQ</th>\n",
       "      <th>Ticket_SP</th>\n",
       "      <th>Ticket_STONO</th>\n",
       "      <th>Ticket_STONO2</th>\n",
       "      <th>Ticket_STONOQ</th>\n",
       "      <th>Ticket_SWPP</th>\n",
       "      <th>Ticket_WC</th>\n",
       "      <th>Ticket_WEP</th>\n",
       "      <th>Ticket_XXX</th>\n",
       "      <th>FamilySize</th>\n",
       "      <th>Singleton</th>\n",
       "      <th>SmallFamily</th>\n",
       "      <th>LargeFamily</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Sex   Age  SibSp  Parch     Fare  Title_Master  Title_Miss  \\\n",
       "0            1    1  22.0      1      0   7.2500             0           0   \n",
       "1            2    0  38.0      1      0  71.2833             0           0   \n",
       "2            3    0  26.0      0      0   7.9250             0           1   \n",
       "3            4    0  35.0      1      0  53.1000             0           0   \n",
       "4            5    1  35.0      0      0   8.0500             0           0   \n",
       "\n",
       "   Title_Mr  Title_Mrs  Title_Officer  Title_Royalty  Embarked_C  Embarked_Q  \\\n",
       "0         1          0              0              0           0           0   \n",
       "1         0          1              0              0           1           0   \n",
       "2         0          0              0              0           0           0   \n",
       "3         0          1              0              0           0           0   \n",
       "4         1          0              0              0           0           0   \n",
       "\n",
       "   Embarked_S  Cabin_A  Cabin_B  Cabin_C  Cabin_D  Cabin_E  Cabin_F  Cabin_G  \\\n",
       "0           1        0        0        0        0        0        0        0   \n",
       "1           0        0        0        1        0        0        0        0   \n",
       "2           1        0        0        0        0        0        0        0   \n",
       "3           1        0        0        1        0        0        0        0   \n",
       "4           1        0        0        0        0        0        0        0   \n",
       "\n",
       "   Cabin_T  Cabin_U  Pclass_1  Pclass_2  Pclass_3  Ticket_A  Ticket_A4  \\\n",
       "0        0        1         0         0         1         0          0   \n",
       "1        0        0         1         0         0         0          0   \n",
       "2        0        1         0         0         1         0          0   \n",
       "3        0        0         1         0         0         0          0   \n",
       "4        0        1         0         0         1         0          0   \n",
       "\n",
       "   Ticket_A5  Ticket_AQ3  Ticket_AQ4  Ticket_AS  Ticket_C  Ticket_CA  \\\n",
       "0          1           0           0          0         0          0   \n",
       "1          0           0           0          0         0          0   \n",
       "2          0           0           0          0         0          0   \n",
       "3          0           0           0          0         0          0   \n",
       "4          0           0           0          0         0          0   \n",
       "\n",
       "   Ticket_CASOTON  Ticket_FC  Ticket_FCC  Ticket_Fa  Ticket_LINE  Ticket_LP  \\\n",
       "0               0          0           0          0            0          0   \n",
       "1               0          0           0          0            0          0   \n",
       "2               0          0           0          0            0          0   \n",
       "3               0          0           0          0            0          0   \n",
       "4               0          0           0          0            0          0   \n",
       "\n",
       "   Ticket_PC  Ticket_PP  Ticket_PPP  Ticket_SC  Ticket_SCA3  Ticket_SCA4  \\\n",
       "0          0          0           0          0            0            0   \n",
       "1          1          0           0          0            0            0   \n",
       "2          0          0           0          0            0            0   \n",
       "3          0          0           0          0            0            0   \n",
       "4          0          0           0          0            0            0   \n",
       "\n",
       "   Ticket_SCAH  Ticket_SCOW  Ticket_SCPARIS  Ticket_SCParis  Ticket_SOC  \\\n",
       "0            0            0               0               0           0   \n",
       "1            0            0               0               0           0   \n",
       "2            0            0               0               0           0   \n",
       "3            0            0               0               0           0   \n",
       "4            0            0               0               0           0   \n",
       "\n",
       "   Ticket_SOP  Ticket_SOPP  Ticket_SOTONO2  Ticket_SOTONOQ  Ticket_SP  \\\n",
       "0           0            0               0               0          0   \n",
       "1           0            0               0               0          0   \n",
       "2           0            0               0               0          0   \n",
       "3           0            0               0               0          0   \n",
       "4           0            0               0               0          0   \n",
       "\n",
       "   Ticket_STONO  Ticket_STONO2  Ticket_STONOQ  Ticket_SWPP  Ticket_WC  \\\n",
       "0             0              0              0            0          0   \n",
       "1             0              0              0            0          0   \n",
       "2             0              1              0            0          0   \n",
       "3             0              0              0            0          0   \n",
       "4             0              0              0            0          0   \n",
       "\n",
       "   Ticket_WEP  Ticket_XXX  FamilySize  Singleton  SmallFamily  LargeFamily  \n",
       "0           0           0           2          0            1            0  \n",
       "1           0           0           2          0            1            0  \n",
       "2           0           0           1          1            0            0  \n",
       "3           0           1           2          0            1            0  \n",
       "4           0           1           1          1            0            0  "
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "_cell_guid": "92fddd89-5c84-46f8-a045-91d8b92ae572",
    "_uuid": "4d5f6f70261c64d3e1db50bc98d6037d99d4785b",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def scale_all_features():\n",
    "    \n",
    "    global combined\n",
    "    \n",
    "    features = list(combined.columns)\n",
    "    features.remove('PassengerId')\n",
    "    combined[features] = combined[features].apply(lambda x: x/x.max(), axis=0)\n",
    "    \n",
    "    print ('Features scaled successfully !')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "_cell_guid": "a809da0c-2a61-4496-8f83-a4a454ae7a49",
    "_uuid": "70b4c0324cd53187c80dd05b28f466439b7c77d6"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Features scaled successfully !\n"
     ]
    }
   ],
   "source": [
    "scale_all_features()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "_cell_guid": "581a0669-6330-4d9a-88be-58cfc33e69a1",
    "_uuid": "e5af0ab56a7ea6866f46b3db2a000681ebb13842",
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.6/site-packages/sklearn/cross_validation.py:41: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.\n",
      "  \"This module will be removed in 0.20.\", DeprecationWarning)\n",
      "/opt/conda/lib/python3.6/site-packages/sklearn/grid_search.py:42: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. This module will be removed in 0.20.\n",
      "  DeprecationWarning)\n"
     ]
    }
   ],
   "source": [
    "\n",
    "\n",
    "from sklearn.pipeline import make_pipeline\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.feature_selection import SelectKBest\n",
    "from sklearn.cross_validation import StratifiedKFold\n",
    "from sklearn.grid_search import GridSearchCV\n",
    "from sklearn.ensemble.gradient_boosting import GradientBoostingClassifier\n",
    "from sklearn.cross_validation import cross_val_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "_cell_guid": "87a1005a-8ba6-4790-9d21-7b8c9cc26577",
    "_uuid": "a3ab0f1e712ac721ce4efd03c53e86488d2f8c85",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def compute_score(clf, X, y,scoring='accuracy'):\n",
    "    xval = cross_val_score(clf, X, y, cv = 5,scoring=scoring)\n",
    "    return np.mean(xval)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "_cell_guid": "341799d6-1b2d-41f0-a051-c5114acfd496",
    "_uuid": "0871a1478ff81b6c1395cecb832e42b10d790695",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def recover_train_test_target():\n",
    "    global combined\n",
    "    \n",
    "    train0 = pd.read_csv('../input/train.csv')\n",
    "    \n",
    "    targets = train0.Survived\n",
    "    train = combined.ix[0:890]\n",
    "    test = combined.ix[891:]\n",
    "    \n",
    "    return train,test,targets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "_cell_guid": "d8b2c5c1-1010-4d04-9261-d5b27c33da91",
    "_uuid": "5bdc0c306a70c3165a3a3e2203c46b57e9b1576a",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "train,test,targets = recover_train_test_target()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "_cell_guid": "55572c70-3c51-434f-bbc2-3a091a885238",
    "_uuid": "7f1618f40aca1ff96738a257393f4672207beecb",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from sklearn.ensemble import ExtraTreesClassifier\n",
    "from sklearn.feature_selection import SelectFromModel\n",
    "clf = ExtraTreesClassifier(n_estimators=200)\n",
    "clf = clf.fit(train, targets)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "_cell_guid": "d56c330d-c97d-4016-a8e8-a8b35d55b26a",
    "_uuid": "633f0bd12c872a2c46c534e065f83814c7de9e50",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "features = pd.DataFrame()\n",
    "features['feature'] = train.columns\n",
    "features['importance'] = clf.feature_importances_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "_cell_guid": "3f5dda7a-b05f-4160-87a2-4d2a6defc32f",
    "_uuid": "5660de2eabc16ec13a13d4b959050e5f5c5af903"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>feature</th>\n",
       "      <th>importance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>PassengerId</td>\n",
       "      <td>0.129956</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Age</td>\n",
       "      <td>0.118345</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Sex</td>\n",
       "      <td>0.118217</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Fare</td>\n",
       "      <td>0.113917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Title_Mr</td>\n",
       "      <td>0.102083</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Pclass_3</td>\n",
       "      <td>0.038449</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Title_Miss</td>\n",
       "      <td>0.036825</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Title_Mrs</td>\n",
       "      <td>0.033017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Cabin_U</td>\n",
       "      <td>0.030666</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>SmallFamily</td>\n",
       "      <td>0.023045</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Pclass_1</td>\n",
       "      <td>0.021334</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>FamilySize</td>\n",
       "      <td>0.020636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>SibSp</td>\n",
       "      <td>0.017053</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>LargeFamily</td>\n",
       "      <td>0.016019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Title_Master</td>\n",
       "      <td>0.015883</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Parch</td>\n",
       "      <td>0.014272</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Pclass_2</td>\n",
       "      <td>0.013230</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>Ticket_XXX</td>\n",
       "      <td>0.012921</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Embarked_S</td>\n",
       "      <td>0.012474</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Embarked_C</td>\n",
       "      <td>0.009950</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>Singleton</td>\n",
       "      <td>0.009640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Cabin_E</td>\n",
       "      <td>0.009244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Cabin_B</td>\n",
       "      <td>0.008202</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Embarked_Q</td>\n",
       "      <td>0.007500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Cabin_D</td>\n",
       "      <td>0.006767</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Title_Officer</td>\n",
       "      <td>0.006642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>Ticket_PC</td>\n",
       "      <td>0.006292</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>Ticket_SWPP</td>\n",
       "      <td>0.005904</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Cabin_C</td>\n",
       "      <td>0.005893</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>Ticket_STONO</td>\n",
       "      <td>0.005822</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Ticket_CA</td>\n",
       "      <td>0.003364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Ticket_A5</td>\n",
       "      <td>0.003242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>Ticket_WC</td>\n",
       "      <td>0.002493</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Cabin_A</td>\n",
       "      <td>0.002452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Ticket_C</td>\n",
       "      <td>0.002162</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Cabin_F</td>\n",
       "      <td>0.001822</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>Ticket_SOTONOQ</td>\n",
       "      <td>0.001737</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>Ticket_STONO2</td>\n",
       "      <td>0.001726</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>Ticket_SOPP</td>\n",
       "      <td>0.001566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Cabin_G</td>\n",
       "      <td>0.001351</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Title_Royalty</td>\n",
       "      <td>0.000924</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>Ticket_FC</td>\n",
       "      <td>0.000814</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>Ticket_WEP</td>\n",
       "      <td>0.000812</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>Ticket_PP</td>\n",
       "      <td>0.000798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>Ticket_SOC</td>\n",
       "      <td>0.000723</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>Ticket_SCPARIS</td>\n",
       "      <td>0.000661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>Ticket_LINE</td>\n",
       "      <td>0.000573</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>Ticket_FCC</td>\n",
       "      <td>0.000512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Ticket_A4</td>\n",
       "      <td>0.000437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Ticket_SCParis</td>\n",
       "      <td>0.000411</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Cabin_T</td>\n",
       "      <td>0.000315</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>Ticket_SCAH</td>\n",
       "      <td>0.000255</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>Ticket_SOP</td>\n",
       "      <td>0.000135</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>Ticket_SOTONO2</td>\n",
       "      <td>0.000113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>Ticket_SC</td>\n",
       "      <td>0.000078</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>Ticket_PPP</td>\n",
       "      <td>0.000069</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>Ticket_SP</td>\n",
       "      <td>0.000054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>Ticket_SCOW</td>\n",
       "      <td>0.000048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>Ticket_Fa</td>\n",
       "      <td>0.000045</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>Ticket_SCA4</td>\n",
       "      <td>0.000044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Ticket_AS</td>\n",
       "      <td>0.000036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Ticket_CASOTON</td>\n",
       "      <td>0.000030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>Ticket_SCA3</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>Ticket_STONOQ</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>Ticket_LP</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Ticket_AQ4</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Ticket_AQ3</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Ticket_A</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           feature  importance\n",
       "0      PassengerId    0.129956\n",
       "2              Age    0.118345\n",
       "1              Sex    0.118217\n",
       "5             Fare    0.113917\n",
       "8         Title_Mr    0.102083\n",
       "26        Pclass_3    0.038449\n",
       "7       Title_Miss    0.036825\n",
       "9        Title_Mrs    0.033017\n",
       "23         Cabin_U    0.030666\n",
       "66     SmallFamily    0.023045\n",
       "24        Pclass_1    0.021334\n",
       "64      FamilySize    0.020636\n",
       "3            SibSp    0.017053\n",
       "67     LargeFamily    0.016019\n",
       "6     Title_Master    0.015883\n",
       "4            Parch    0.014272\n",
       "25        Pclass_2    0.013230\n",
       "63      Ticket_XXX    0.012921\n",
       "14      Embarked_S    0.012474\n",
       "12      Embarked_C    0.009950\n",
       "65       Singleton    0.009640\n",
       "19         Cabin_E    0.009244\n",
       "16         Cabin_B    0.008202\n",
       "13      Embarked_Q    0.007500\n",
       "18         Cabin_D    0.006767\n",
       "10   Title_Officer    0.006642\n",
       "41       Ticket_PC    0.006292\n",
       "60     Ticket_SWPP    0.005904\n",
       "17         Cabin_C    0.005893\n",
       "57    Ticket_STONO    0.005822\n",
       "34       Ticket_CA    0.003364\n",
       "29       Ticket_A5    0.003242\n",
       "61       Ticket_WC    0.002493\n",
       "15         Cabin_A    0.002452\n",
       "33        Ticket_C    0.002162\n",
       "20         Cabin_F    0.001822\n",
       "55  Ticket_SOTONOQ    0.001737\n",
       "58   Ticket_STONO2    0.001726\n",
       "53     Ticket_SOPP    0.001566\n",
       "21         Cabin_G    0.001351\n",
       "11   Title_Royalty    0.000924\n",
       "36       Ticket_FC    0.000814\n",
       "62      Ticket_WEP    0.000812\n",
       "42       Ticket_PP    0.000798\n",
       "51      Ticket_SOC    0.000723\n",
       "49  Ticket_SCPARIS    0.000661\n",
       "39     Ticket_LINE    0.000573\n",
       "37      Ticket_FCC    0.000512\n",
       "28       Ticket_A4    0.000437\n",
       "50  Ticket_SCParis    0.000411\n",
       "22         Cabin_T    0.000315\n",
       "47     Ticket_SCAH    0.000255\n",
       "52      Ticket_SOP    0.000135\n",
       "54  Ticket_SOTONO2    0.000113\n",
       "44       Ticket_SC    0.000078\n",
       "43      Ticket_PPP    0.000069\n",
       "56       Ticket_SP    0.000054\n",
       "48     Ticket_SCOW    0.000048\n",
       "38       Ticket_Fa    0.000045\n",
       "46     Ticket_SCA4    0.000044\n",
       "32       Ticket_AS    0.000036\n",
       "35  Ticket_CASOTON    0.000030\n",
       "45     Ticket_SCA3    0.000000\n",
       "59   Ticket_STONOQ    0.000000\n",
       "40       Ticket_LP    0.000000\n",
       "31      Ticket_AQ4    0.000000\n",
       "30      Ticket_AQ3    0.000000\n",
       "27        Ticket_A    0.000000"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# type(features)\n",
    "features.sort_values(['importance'],ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "_cell_guid": "98d90685-c56f-433e-9e18-64e04235cda9",
    "_uuid": "641f48362e35b6eb7fa48280e2aaa154b2c79245"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(891, 15)"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model = SelectFromModel(clf, prefit=True)\n",
    "train_new = model.transform(train)\n",
    "train_new.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "_cell_guid": "0cfa9f0f-569e-4a6e-bdaf-c9f17eb8fbce",
    "_uuid": "10c3a4b869c8f8d1584d1138ea14b83167b3b3c1"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(418, 15)"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_new = model.transform(test)\n",
    "test_new.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "_cell_guid": "74124145-bbae-44a7-bbee-1572dd11fe90",
    "_uuid": "707cbeb576173d628429d6b0abea53359501fc67",
    "collapsed": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best score: 0.8305274971941639\n",
      "Best parameters: {'criterion': 'gini', 'max_depth': 6, 'n_estimators': 190}\n"
     ]
    }
   ],
   "source": [
    "forest = RandomForestClassifier(max_features='sqrt')\n",
    "\n",
    "parameter_grid = {\n",
    "                 'max_depth' : [3,5,6,7,8],\n",
    "                 'n_estimators': [190,210,240,250],\n",
    "                 'criterion': ['gini','entropy']\n",
    "                 }\n",
    "\n",
    "cross_validation = StratifiedKFold(targets, n_folds=5)\n",
    "\n",
    "grid_search = GridSearchCV(forest,\n",
    "                           param_grid=parameter_grid,\n",
    "                           cv=cross_validation)\n",
    "\n",
    "grid_search.fit(train_new, targets)\n",
    "\n",
    "print('Best score: {}'.format(grid_search.best_score_))\n",
    "print('Best parameters: {}'.format(grid_search.best_params_))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "_cell_guid": "729b0a14-4565-4f07-b017-9539f3c79966",
    "_uuid": "e31d2816de54ac66829022e943c6a8bbffe873ef",
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "output = grid_search.predict(test_new).astype(int)\n",
    "df_output = pd.DataFrame()\n",
    "df_output['PassengerId'] = test['PassengerId']\n",
    "df_output['Survived'] = output\n",
    "df_output[['PassengerId','Survived']].to_csv('./output.csv',index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {
    "_cell_guid": "13129a5d-47b2-47ba-81e2-3c67d472536c",
    "_kg_hide-output": false,
    "_uuid": "2a9d64d4ef4b76cc337ad856e328b595875daf36",
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>892</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>893</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>894</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>895</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>896</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived\n",
       "0          892         0\n",
       "1          893         0\n",
       "2          894         0\n",
       "3          895         0\n",
       "4          896         1"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "outputCSV = pd.read_csv('./output.csv')\n",
    "outputCSV.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "_uuid": "1cba75d912bae183fd60cfd1911d379bbefbf5b9",
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
